import * as au from "../aurelia";
import { LookupState } from "./lookup-state";
export declare class MdLookup {
    private element;
    private taskQueue;
    constructor(element: Element, taskQueue: au.TaskQueue);
    static searching: symbol;
    static error: symbol;
    searching: boolean;
    noMatches: boolean;
    showOptions: boolean;
    errorMessage: string;
    searchingMessage: string;
    dropdown: HTMLElement;
    dropdownUl: HTMLElement;
    input: HTMLInputElement;
    labelElement: HTMLLabelElement;
    validationContainer: HTMLElement;
    logger: au.Logger;
    filter: string;
    suppressFilterChanged: boolean;
    filterChanged(): void;
    setFilter(filter: string): void;
    label: string;
    value: any;
    suppressValueChanged: boolean;
    valueChanged(newValue: any, oldValue: any): Promise<void>;
    setValue(value: string): void;
    displayFieldName: ((option: any) => string) | string;
    valueFieldName: ((option: any) => any) | string;
    readonly: boolean;
    placeholder: string;
    LookupState: typeof LookupState;
    state: LookupState;
    options: any[];
    optionsChanged(): void;
    isOpen: boolean;
    updateFilterBasedOnValue(): void;
    fixDropdownSizeIfTooBig(): void;
    open(): void;
    close(): void;
    bind(bindingContext: object, overrideContext: object): void;
    attached(): void;
    detached(): void;
    select(option: any): void;
    getDisplayValue(option: any): any;
    mdUnrenderValidateResults: (results: au.ValidateResult[], renderer: au.MaterializeFormValidationRenderer) => void;
    mdRenderValidateResults: (results: au.ValidateResult[], renderer: au.MaterializeFormValidationRenderer) => void;
}
