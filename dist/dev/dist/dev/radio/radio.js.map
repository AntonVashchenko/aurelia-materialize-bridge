{"version":3,"sources":["radio/radio.js"],"names":[],"mappings":";;;oGAQa,OAAO;;;;;;;;;;oCARX,QAAQ;yCAAE,aAAa;;oCACvB,WAAW;;2CACX,MAAM;;iDACN,gBAAgB;;uDAChB,4BAA4B;;;AAIxB,aAAO;;;8BAAP,OAAO;;uBAEjB,QAAQ,CAAC;AACR,8BAAkB,EAAE,WAAW,CAAC,MAAM;WACvC,CAAC;;;;;uBACD,QAAQ,EAAE;;mBAAc,KAAK;;;;;uBAC7B,QAAQ,EAAE;;mBAAS,KAAK;;;;;uBACxB,QAAQ,EAAE;;;;;uBACV,QAAQ,EAAE;;mBAAU,EAAE;;;;;uBACtB,QAAQ,EAAE;;mBAAW,EAAE;;;;;iBARZ,CAAC;;;;AAUF,iBAXA,OAAO,CAWN,OAAO,EAAE;;;;;;;;;;;;;;;AACnB,cAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,cAAI,CAAC,SAAS,iBAAe,OAAO,CAAC,EAAE,EAAE,AAAE,CAAC;SAE7C;;AAfU,eAAO,WAiBlB,QAAQ,GAAA,oBAAG;AACT,cAAI,CAAC,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzD,cAAI,4BAA4B,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AAC5C,gBAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;WAC9C;AACD,cAAI,4BAA4B,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AACjD,gBAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;WAC5B;AACD,cAAI,CAAC,KAAK,CAAC,OAAO,GAAG,4BAA4B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAEnE;;AA3BU,eAAO,WA6BlB,QAAQ,GAAA,oBAAG;AACT,cAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC;SAE/D;;AAhCU,eAAO,WA4ClB,iBAAiB,GAAA,2BAAC,QAAQ,EAAE;AAC1B,cAAI,IAAI,CAAC,KAAK,EAAE;AACd,gBAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;WAClC;SACF;;uBAhDU,OAAO;AAAP,eAAO,GADnB,MAAM,CAAC,OAAO,CAAC,CACH,OAAO,KAAP,OAAO;AAAP,eAAO,GAFnB,aAAa,CAAC,UAAU,CAAC,CAEb,OAAO,KAAP,OAAO;eAAP,OAAO","file":"radio/radio.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\nimport { bindingMode } from 'aurelia-binding';\nimport { inject } from 'aurelia-dependency-injection';\nimport { AttributeManager } from '../common/attributeManager';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\n\n@customElement('md-radio')\n@inject(Element)\nexport class MdRadio {\n  static id = 0;\n  @bindable({\n    defaultBindingMode: bindingMode.twoWay\n  }) mdChecked;\n  @bindable() mdDisabled = false;\n  @bindable() mdGap = false;\n  @bindable() mdModel;\n  @bindable() mdName = '';\n  @bindable() mdValue = '';\n\n  constructor(element) {\n    this.element = element;\n    this.controlId = `md-radio-${MdRadio.id++}`;\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  attached() {\n    this.attributeManager = new AttributeManager(this.radio);\n    if (getBooleanFromAttributeValue(this.mdGap)) {\n      this.attributeManager.addClasses('with-gap');\n    }\n    if (getBooleanFromAttributeValue(this.mdDisabled)) {\n      this.radio.disabled = true;\n    }\n    this.radio.checked = getBooleanFromAttributeValue(this.mdChecked);\n    // this.radio.addEventListener('change', this.handleChange);\n  }\n\n  detached() {\n    this.attributeManager.removeClasses(['with-gap', 'disabled']);\n    // this.radio.removeEventListener('change', this.handleChange);\n  }\n\n  // handleChange() {\n  //   this.mdChecked = this.radio.checked;\n  // }\n\n  // mdCheckedChanged(newValue) {\n  //   if (this.radio) {\n  //     this.radio.checked = !!newValue;\n  //   }\n  // }\n\n  mdDisabledChanged(newValue) {\n    if (this.radio) {\n      this.radio.disabled = !!newValue;\n    }\n  }\n}\n"]}