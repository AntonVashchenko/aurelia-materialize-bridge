{"version":3,"sources":["button/button.js"],"names":[],"mappings":";;;yFAOa,QAAQ;;;;;;;;;;oCAPZ,QAAQ;2CAAE,eAAe;;2CACzB,MAAM;;iDACN,gBAAgB;;uDAChB,4BAA4B;;;AAIxB,cAAQ;;;8BAAR,QAAQ;;uBAClB,QAAQ,EAAE;;mBAAY,KAAK;;;;;uBAC3B,QAAQ,EAAE;;mBAAQ,KAAK;;;;;uBACvB,QAAQ,EAAE;;mBAAY,KAAK;;;;;uBAC3B,QAAQ,EAAE;;mBAAS,KAAK;;;;;AAEd,iBANA,QAAQ,CAMP,OAAO,EAAE;;;;;;;;;;;AACnB,cAAI,CAAC,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,OAAO,CAAC,CAAC;SACvD;;AARU,gBAAQ,WAUnB,QAAQ,GAAA,oBAAG;AACT,cAAI,OAAO,GAAG,EAAE,CAAC;;AAEjB,cAAI,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAC3C,mBAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;WAC1B;AACD,cAAI,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;AAC/C,mBAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;WAC9B;AACD,cAAI,4BAA4B,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AAC5C,mBAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;WAC3B;;AAED,cAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AACxB,mBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;WACrB;;AAED,cAAI,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;AAC/C,mBAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;WAC1B;;AAED,cAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAC5C,mBAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;WACxB;AACD,cAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;SAC3C;;AAnCU,gBAAQ,WAqCnB,QAAQ,GAAA,oBAAG;AACT,cAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC;SAC7F;;AAvCU,gBAAQ,WAyCnB,eAAe,GAAA,yBAAC,QAAQ,EAAE;AACxB,cAAI,4BAA4B,CAAC,QAAQ,CAAC,EAAE;AAC1C,gBAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;WAC9C,MAAM;AACL,gBAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;WACjD;SACF;;AA/CU,gBAAQ,WAiDnB,WAAW,GAAA,qBAAC,QAAQ,EAAE;AACpB,cAAI,4BAA4B,CAAC,QAAQ,CAAC,EAAE;AAC1C,gBAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;AACvD,gBAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;WAC9C,MAAM;AACL,gBAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;AAChD,gBAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;WACrD;SACF;;wBAzDU,QAAQ;AAAR,gBAAQ,GADpB,MAAM,CAAC,OAAO,CAAC,CACH,QAAQ,KAAR,QAAQ;AAAR,gBAAQ,GAFpB,eAAe,CAAC,WAAW,CAAC,CAEhB,QAAQ,KAAR,QAAQ;eAAR,QAAQ","file":"button/button.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { AttributeManager } from '../common/attributeManager';\r\nimport { getBooleanFromAttributeValue } from '../common/attributes';\r\n\r\n@customAttribute('md-button')\r\n@inject(Element)\r\nexport class MdButton {\r\n  @bindable() disabled = false;\r\n  @bindable() flat = false;\r\n  @bindable() floating = false;\r\n  @bindable() large = false;\r\n\r\n  constructor(element) {\r\n    this.attributeManager = new AttributeManager(element);\r\n  }\r\n\r\n  attached() {\r\n    let classes = [];\r\n\r\n    if (getBooleanFromAttributeValue(this.flat)) {\r\n      classes.push('btn-flat');\r\n    }\r\n    if (getBooleanFromAttributeValue(this.floating)) {\r\n      classes.push('btn-floating');\r\n    }\r\n    if (getBooleanFromAttributeValue(this.large)) {\r\n      classes.push('btn-large');\r\n    }\r\n\r\n    if (classes.length === 0) {\r\n      classes.push('btn');\r\n    }\r\n\r\n    if (getBooleanFromAttributeValue(this.disabled)) {\r\n      classes.push('disabled');\r\n    }\r\n\r\n    if (!getBooleanFromAttributeValue(this.flat)) {\r\n      classes.push('accent');\r\n    }\r\n    this.attributeManager.addClasses(classes);\r\n  }\r\n\r\n  detached() {\r\n    this.attributeManager.removeClasses(['accent', 'btn', 'btn-flat', 'btn-large', 'disabled']);\r\n  }\r\n\r\n  disabledChanged(newValue) {\r\n    if (getBooleanFromAttributeValue(newValue)) {\r\n      this.attributeManager.addClasses('disabled');\r\n    } else {\r\n      this.attributeManager.removeClasses('disabled');\r\n    }\r\n  }\r\n\r\n  flatChanged(newValue) {\r\n    if (getBooleanFromAttributeValue(newValue)) {\r\n      this.attributeManager.removeClasses(['btn', 'accent']);\r\n      this.attributeManager.addClasses('btn-flat');\r\n    } else {\r\n      this.attributeManager.removeClasses('btn-flat');\r\n      this.attributeManager.addClasses(['btn', 'accent']);\r\n    }\r\n  }\r\n}\r\n"]}