{"version":3,"sources":["button/button.js"],"names":[],"mappings":";;;uFAMa,QAAQ;;;;;;;;;;mCANZ,QAAQ;0CAAE,eAAe;iCAAE,MAAM;;6CACjC,cAAc;;uDACd,4BAA4B;;;AAIxB,cAAQ;;;8BAAR,QAAQ;;uBAClB,QAAQ,EAAE;;mBAAY,KAAK;;;;;uBAC3B,QAAQ,EAAE;;mBAAQ,KAAK;;;;;uBACvB,QAAQ,EAAE;;mBAAS,KAAK;;;;;AAEd,iBALA,QAAQ,CAKP,OAAO,EAAE;;;;;;;;;AACnB,cAAI,CAAC,WAAW,GAAG,IAAI,cAAc,CAAC,OAAO,CAAC,CAAC;SAChD;;AAPU,gBAAQ,WASnB,QAAQ,GAAA,oBAAG;AACT,cAAI,OAAO,GAAG,EAAE,CAAC;;AAEjB,cAAI,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAC3C,mBAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;WAC1B;AACD,cAAI,4BAA4B,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AAC5C,mBAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;WAC3B;;AAED,cAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AACxB,mBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;WACrB;;AAED,cAAI,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;AAC/C,mBAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;WAC1B;;AAED,cAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAC5C,mBAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;WACxB;AACD,cAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;SACtC;;AA/BU,gBAAQ,WAiCnB,QAAQ,GAAA,oBAAG;AACT,cAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC;SACxF;;AAnCU,gBAAQ,WAqCnB,eAAe,GAAA,yBAAC,QAAQ,EAAE;AACxB,cAAI,4BAA4B,CAAC,QAAQ,CAAC,EAAE;AAC1C,gBAAI,CAAC,WAAW,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;WACzC,MAAM;AACL,gBAAI,CAAC,WAAW,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;WAC5C;SACF;;wBA3CU,QAAQ;AAAR,gBAAQ,GADpB,MAAM,CAAC,OAAO,CAAC,CACH,QAAQ,KAAR,QAAQ;AAAR,gBAAQ,GAFpB,eAAe,CAAC,WAAW,CAAC,CAEhB,QAAQ,KAAR,QAAQ;eAAR,QAAQ","file":"button/button.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customAttribute, inject } from 'aurelia-framework';\nimport { CssClassSetter } from '../common/cssClassSetter';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\n\n@customAttribute('md-button')\n@inject(Element)\nexport class MdButton {\n  @bindable() disabled = false;\n  @bindable() flat = false;\n  @bindable() large = false;\n\n  constructor(element) {\n    this.classSetter = new CssClassSetter(element);\n  }\n\n  attached() {\n    let classes = [];\n\n    if (getBooleanFromAttributeValue(this.flat)) {\n      classes.push('btn-flat');\n    }\n    if (getBooleanFromAttributeValue(this.large)) {\n      classes.push('btn-large');\n    }\n\n    if (classes.length === 0) {\n      classes.push('btn');\n    }\n\n    if (getBooleanFromAttributeValue(this.disabled)) {\n      classes.push('disabled');\n    }\n\n    if (!getBooleanFromAttributeValue(this.flat)) {\n      classes.push('accent');\n    }\n    this.classSetter.addClasses(classes);\n  }\n\n  detached() {\n    this.classSetter.removeClasses(['accent', 'btn', 'btn-flat', 'btn-large', 'disabled']);\n  }\n\n  disabledChanged(newValue) {\n    if (getBooleanFromAttributeValue(newValue)) {\n      this.classSetter.addClasses('disabled');\n    } else {\n      this.classSetter.removeClasses('disabled');\n    }\n  }\n}\n"]}