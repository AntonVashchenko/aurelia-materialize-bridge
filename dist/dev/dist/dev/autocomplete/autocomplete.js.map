{"version":3,"sources":["autocomplete/autocomplete.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQ,c,sBAAA,Q;AAAU,qB,sBAAA,e;;AACV,Y,+BAAA,M;;AACA,e,iBAAA,S;;;gCAIK,c,WAFZ,gBAAgB,iBAAhB,C,UACA,OAAO,OAAP,C,UAGE,U;AAED,gCAAY,OAAZ,EAAqB;AAAA;;AAAA,eAHrB,KAGqB,GAHb,IAGa;;AAAA;;AACnB,eAAK,OAAL,GAAe,OAAf;AACD;;iCAED,Q,uBAAW;AACT,cAAI,KAAK,OAAL,CAAa,OAAb,CAAqB,WAArB,OAAuC,OAA3C,EAAoD;AAClD,iBAAK,KAAL,GAAa,KAAK,OAAlB;AACD,WAFD,MAEO,IAAI,KAAK,OAAL,CAAa,OAAb,CAAqB,WAArB,OAAuC,UAA3C,EAAuD;AAC5D,iBAAK,KAAL,GAAa,KAAK,OAAL,CAAa,EAAb,CAAgB,UAAhB,CAA2B,SAA3B,CAAqC,KAAlD;AACD,WAFM,MAEA;AACL,kBAAM,IAAI,KAAJ,CAAU,yEAAV,CAAN;AACD;AACD,eAAK,OAAL;AACD,S;;iCAED,Q,uBAAW;AAET,YAAE,uBAAF,EAA2B,KAAK,OAAhC,EAAyC,GAAzC,CAA6C,OAA7C;AACA,YAAE,uBAAF,EAA2B,KAAK,OAAhC,EAAyC,MAAzC;AACD,S;;iCAED,O,sBAAU;AAAA;;AACR,eAAK,QAAL;AACA,YAAE,KAAK,KAAP,EAAc,YAAd,CAA2B;AACzB,kBAAM,KAAK;AADc,WAA3B;AAGA,YAAE,uBAAF,EAA2B,KAAK,OAAhC,EAAyC,EAAzC,CAA4C,OAA5C,EAAqD,YAAM;AACzD,sBAAU,MAAK,KAAf,EAAsB,QAAtB;AACD,WAFD;AAGD,S;;iCAED,a,0BAAc,Q,EAAU;AACtB,eAAK,OAAL;AACD,S;;;;;;iBAnCoB,E","file":"autocomplete/autocomplete.js","sourceRoot":"/source/","sourcesContent":["import {bindable, customAttribute} from 'aurelia-templating';\r\nimport {inject} from 'aurelia-dependency-injection';\r\nimport {fireEvent} from '../common/events';\r\n\r\n@customAttribute('md-autocomplete')\r\n@inject(Element)\r\nexport class MdAutoComplete {\r\n  input = null;\r\n  @bindable() values = {};\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  attached() {\r\n    if (this.element.tagName.toLowerCase() === 'input') {\r\n      this.input = this.element;\r\n    } else if (this.element.tagName.toLowerCase() === 'md-input') {\r\n      this.input = this.element.au.controller.viewModel.input;\r\n    } else {\r\n      throw new Error('md-autocomplete must be attached to either an input or md-input element');\r\n    }\r\n    this.refresh();\r\n  }\r\n\r\n  detached() {\r\n    // remove .autocomplete-content children\r\n    $('.autocomplete-content', this.element).off('click');\r\n    $('.autocomplete-content', this.element).remove();\r\n  }\r\n\r\n  refresh() {\r\n    this.detached();\r\n    $(this.input).autocomplete({\r\n      data: this.values\r\n    });\r\n    $('.autocomplete-content', this.element).on('click', () => {\r\n      fireEvent(this.input, 'change');\r\n    });\r\n  }\r\n\r\n  valuesChanged(newValue) {\r\n    this.refresh();\r\n  }\r\n}\r\n"]}