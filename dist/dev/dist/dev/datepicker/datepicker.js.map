{"version":3,"sources":["datepicker/datepicker.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAS;AAAU;;AACV;;AACA;;AACA;;AACA;;;8BAII,uBAFZ,OAAO,OAAP,EAAgB,SAAhB,WACA,gBAAgB,eAAhB,WAEE,oBACA,oBACA,SAAS,EAAE,oBAAoB,YAAY,MAAZ,EAA/B;AACD,iBAJW,YAIX,CAAY,OAAZ,EAAqB,SAArB,EAAgC;gCAJrB,cAIqB;;;;;;;;AAC9B,eAAK,OAAL,GAAe,OAAf,CAD8B;AAE9B,eAAK,GAAL,GAAW,UAAU,eAAV,CAAX,CAF8B;AAG9B,eAAK,SAAL,GAAiB,SAAjB,CAH8B;SAAhC;;AAJW,+BASX,uBAAO;;;AACL,eAAK,OAAL,CAAa,SAAb,CAAuB,GAAvB,CAA2B,aAA3B,EADK;AAEL,cAAI,UAAU;AACZ,0BAAc,IAAd;AACA,yBAAa,EAAb;AACA,qBAAS,mBAAW;AAGlB,gBAAE,SAAS,aAAT,CAAF,CAA0B,IAA1B,GAHkB;aAAX;WAHP,CAFC;AAYL,cAAI,OAAO,EAAP,CAZC;;AA2BL,iBAAO,MAAP,CAAc,OAAd,EAAuB,IAAvB,EA3BK;AA4BL,cAAI,KAAK,SAAL,EAAgB;AAClB,oBAAQ,SAAR,GAAoB,KAAK,SAAL,CADF;WAApB;AAGA,eAAK,MAAL,GAAc,EAAE,KAAK,OAAL,CAAF,CAAgB,SAAhB,CAA0B,OAA1B,EAAmC,SAAnC,CAA6C,QAA7C,CAAd,CA/BK;AAgCL,eAAK,MAAL,CAAY,EAAZ,CAAe;AACb,qBAAS,KAAK,OAAL,CAAa,IAAb,CAAkB,IAAlB,CAAT;AACA,mBAAO,KAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,CAAP;WAFF,EAhCK;AAoCL,YAAE,KAAK,OAAL,CAAF,CAAgB,EAAhB,CAAmB,SAAnB,EAA8B,YAAM;AAAE,cAAE,MAAK,OAAL,CAAF,CAAgB,SAAhB,CAA0B,MAA1B,EAAF;WAAN,CAA9B,CApCK;AAqCL,cAAI,KAAK,KAAL,EAAY;AACd,iBAAK,MAAL,CAAY,GAAZ,CAAgB,QAAhB,EAA0B,KAAK,KAAL,CAA1B,CADc;WAAhB;;;AA9CS,+BAmDX,+BAAW;AACT,cAAI,KAAK,MAAL,EAAa;AACf,iBAAK,MAAL,CAAY,IAAZ,GADe;WAAjB;;;AApDS,+BAyDX,6BAAU;AACR,cAAI,WAAW,KAAK,MAAL,CAAY,GAAZ,CAAgB,QAAhB,CAAX,CADI;AAER,eAAK,KAAL,GAAa,WAAW,SAAS,GAAT,GAAe,IAA1B,CAFL;;;AAzDC,+BA8DX,uBAAM,OAAO;;AA9DF,+BAkEX,qCAAa,UAAU;AACrB,eAAK,GAAL,CAAS,KAAT,CAAe,iBAAf,EAAkC,KAAK,KAAL,CAAlC,CADqB;;AAGrB,eAAK,MAAL,CAAY,GAAZ,CAAgB,QAAhB,EAA0B,KAAK,KAAL,CAA1B,CAHqB;;;eAlEZ","file":"datepicker/datepicker.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\nimport { bindingMode } from 'aurelia-binding';\nimport { TaskQueue } from 'aurelia-task-queue';\nimport { inject } from 'aurelia-dependency-injection';\nimport { getLogger } from 'aurelia-logging';\n\n@inject(Element, TaskQueue)\n@customAttribute('md-datepicker')\nexport class MdDatePicker {\n  @bindable() container;\n  @bindable() translation;\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) value;\n  constructor(element, taskQueue) {\n    this.element = element;\n    this.log = getLogger('md-datepicker');\n    this.taskQueue = taskQueue;\n  }\n  bind() {\n    this.element.classList.add('date-picker');\n    let options = {\n      selectMonths: true,\n      selectYears: 15,\n      onClose: function() {\n        // see https://github.com/Dogfalo/materialize/issues/2067\n        // and: https://github.com/amsul/pickadate.js/issues/160\n        $(document.activeElement).blur();\n        // $(this.element).blur();\n      }\n    };\n    let i18n = {};\n    // let i18n = {\n    //   selectMonths: true, // Creates a dropdown to control month\n    //   selectYears: 15, // Creates a dropdown of 15 years to control year\n    //   monthsFull: [ 'Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember' ],\n    //   monthsShort: [ 'Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez' ],\n    //   weekdaysFull: [ 'Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag' ],\n    //   weekdaysShort: [ 'So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa' ],\n    //   today: 'Heute',\n    //   clear: 'Löschen',\n    //   close: 'Schließen',\n    //   firstDay: 1,\n    //   format: 'dddd, dd. mmmm yyyy',\n    //   formatSubmit: 'yyyy/mm/dd'\n    // };\n    Object.assign(options, i18n);\n    if (this.container) {\n      options.container = this.container;\n    }\n    this.picker = $(this.element).pickadate(options).pickadate('picker');\n    this.picker.on({\n      'close': this.onClose.bind(this),\n      'set': this.onSet.bind(this)\n    });\n    $(this.element).on('focusin', () => { $(this.element).pickadate('open'); });\n    if (this.value) {\n      this.picker.set('select', this.value);\n    }\n  }\n\n  detached() {\n    if (this.picker) {\n      this.picker.stop();\n    }\n  }\n\n  onClose() {\n    let selected = this.picker.get('select');\n    this.value = selected ? selected.obj : null;\n  }\n\n  onSet(value) {\n    // this.value = new Date(value.select);\n  }\n\n  valueChanged(newValue) {\n    this.log.debug('selectedChanged', this.value);\n    // this.taskQueue.queueTask(() => {\n    this.picker.set('select', this.value);\n    // });\n  }\n}\n"]}