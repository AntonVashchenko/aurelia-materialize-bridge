{"version":3,"sources":["slider/slider.js"],"names":[],"mappings":";;;yGAgBa,QAAQ;;;;;;;;;;oCAhBZ,QAAQ;yCAAE,aAAa;sCAAE,UAAU;;oCACnC,WAAW;;2CACX,MAAM;;uDACN,4BAA4B;;kCAC5B,SAAS;;;AAYL,cAAQ;;;8BAAR,QAAQ;;uBAClB,QAAQ,CAAC,EAAE,kBAAkB,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC;;mBAAmB,KAAK;;;;;uBAC7E,QAAQ,CAAC,EAAE,kBAAkB,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC;;mBAAY,GAAG;;;;;uBACpE,QAAQ,EAAE;;mBAAgB,IAAI;;;;;uBAC9B,QAAQ,CAAC,EAAE,kBAAkB,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC;;mBAAc,IAAI;;;;;uBACvE,QAAQ,CAAC,EAAE,kBAAkB,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC;;mBAAgB,GAAG;;;;;AAE9D,iBAPA,QAAQ,CAOP,OAAO,EAAE;;;;;;;;;;;;;AACnB,cAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,cAAI,CAAC,GAAG,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;SACnC;;AAVU,gBAAQ,WAYnB,QAAQ,GAAA,oBAAG;AACT,cAAI,4BAA4B,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE;AACtD,gBAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;WAC1C;AACD,cAAI,CAAC,OAAO,EAAE,CAAC;SAChB;;AAjBU,gBAAQ,WAmBnB,KAAK,GAAA,iBAAG;AACN,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACjC;;AArBU,gBAAQ,WAuBnB,KAAK,GAAA,iBAAG;AACN,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACjC;;AAzBU,gBAAQ,WA2BnB,IAAI,GAAA,gBAAG;AACL,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAChC;;AA7BU,gBAAQ,WA+BnB,IAAI,GAAA,gBAAG;AACL,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAChC;;AAjCU,gBAAQ,WAmCnB,OAAO,GAAA,mBAAG;AACR,cAAI,OAAO,GAAG;AACZ,kBAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;AACnC,sBAAU,EAAE,4BAA4B,CAAC,IAAI,CAAC,YAAY,CAAC;AAC3D,oBAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC;AACvC,sBAAU,EAAE,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC;WAC5C,CAAC;AACF,cAAI,CAAC,GAAG,CAAC,KAAK,CAAC,4BAA4B,EAAE,OAAO,CAAC,CAAC;AACtD,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACjC;;AA5CU,gBAAQ,WA8CnB,mBAAmB,GAAA,+BAAG;AACpB,cAAI,CAAC,OAAO,EAAE,CAAC;SAChB;;wBAhDU,QAAQ;AAAR,gBAAQ,GARpB,UAAU,kKAOT,CACW,QAAQ,KAAR,QAAQ;AAAR,gBAAQ,GATpB,MAAM,CAAC,OAAO,CAAC,CASH,QAAQ,KAAR,QAAQ;AAAR,gBAAQ,GAVpB,aAAa,CAAC,WAAW,CAAC,CAUd,QAAQ,KAAR,QAAQ;eAAR,QAAQ","file":"slider/slider.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customElement, inlineView } from 'aurelia-templating';\nimport { bindingMode } from 'aurelia-binding';\nimport { inject } from 'aurelia-dependency-injection';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\nimport { getLogger } from 'aurelia-logging';\n\n@customElement('md-slider')\n@inject(Element)\n@inlineView(`\n  <template class=\"slider\">\n  <require from=\"./slider.css\"></require>\n  <ul class=\"slides\">\n    <content select=\"li\"></content>\n  </ul>\n  </template>\n`)\nexport class MdSlider {\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) mdFillContainer = false;\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) mdHeight = 400;\n  @bindable() mdIndicators = true;\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) mdInterval = 6000;\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) mdTransition = 500;\n\n  constructor(element) {\n    this.element = element;\n    this.log = getLogger('md-slider');\n  }\n\n  attached() {\n    if (getBooleanFromAttributeValue(this.mdFillContainer)) {\n      this.element.classList.add('fullscreen');\n    }\n    this.refresh();\n  }\n\n  pause() {\n    $(this.element).slider('pause');\n  }\n\n  start() {\n    $(this.element).slider('start');\n  }\n\n  next() {\n    $(this.element).slider('next');\n  }\n\n  prev() {\n    $(this.element).slider('prev');\n  }\n\n  refresh() {\n    let options = {\n      height: parseInt(this.mdHeight, 10),\n      indicators: getBooleanFromAttributeValue(this.mdIndicators),\n      interval: parseInt(this.mdInterval, 10),\n      transition: parseInt(this.mdTransition, 10)\n    };\n    this.log.debug('refreshing slider, params:', options);\n    $(this.element).slider(options);\n  }\n\n  mdIndicatorsChanged() {\n    this.refresh();\n  }\n\n  // commented since that leads to strange effects\n  // mdIntervalChanged() {\n  //   this.refresh();\n  // }\n  //\n  // mdTransitionChanged() {\n  //   this.refresh();\n  // }\n}\n"]}