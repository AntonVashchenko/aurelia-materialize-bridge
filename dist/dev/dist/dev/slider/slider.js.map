{"version":3,"sources":["slider/slider.js"],"names":[],"mappings":";;;yGAgBa,QAAQ;;;;;;;;;;oCAhBZ,QAAQ;yCAAE,aAAa;sCAAE,UAAU;;oCACnC,WAAW;;2CACX,MAAM;;uDACN,4BAA4B;;kCAC5B,SAAS;;;AAYL,cAAQ;;;8BAAR,QAAQ;;uBAClB,QAAQ,CAAC,EAAE,kBAAkB,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC;;mBAAmB,KAAK;;;;;uBAC7E,QAAQ,CAAC,EAAE,kBAAkB,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC;;mBAAY,GAAG;;;;;uBACpE,QAAQ,EAAE;;mBAAgB,IAAI;;;;;uBAC9B,QAAQ,CAAC,EAAE,kBAAkB,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC;;mBAAc,IAAI;;;;;uBACvE,QAAQ,CAAC,EAAE,kBAAkB,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC;;mBAAgB,GAAG;;;;;AAE9D,iBAPA,QAAQ,CAOP,OAAO,EAAE;;;;;;;;;;;;;AACnB,cAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,cAAI,CAAC,GAAG,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;SACnC;;AAVU,gBAAQ,WAYnB,QAAQ,GAAA,oBAAG;AACT,cAAI,4BAA4B,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE;AACtD,gBAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;WAC1C;AACD,cAAI,CAAC,OAAO,EAAE,CAAC;SAChB;;AAjBU,gBAAQ,WAmBnB,KAAK,GAAA,iBAAG;AACN,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACjC;;AArBU,gBAAQ,WAuBnB,KAAK,GAAA,iBAAG;AACN,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACjC;;AAzBU,gBAAQ,WA2BnB,IAAI,GAAA,gBAAG;AACL,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAChC;;AA7BU,gBAAQ,WA+BnB,IAAI,GAAA,gBAAG;AACL,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAChC;;AAjCU,gBAAQ,WAmCnB,OAAO,GAAA,mBAAG;AACR,cAAI,OAAO,GAAG;AACZ,kBAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;AACnC,sBAAU,EAAE,4BAA4B,CAAC,IAAI,CAAC,YAAY,CAAC;AAC3D,oBAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC;AACvC,sBAAU,EAAE,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC;WAC5C,CAAC;AACF,cAAI,CAAC,GAAG,CAAC,KAAK,CAAC,4BAA4B,EAAE,OAAO,CAAC,CAAC;AACtD,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACjC;;AA5CU,gBAAQ,WA8CnB,mBAAmB,GAAA,+BAAG;AACpB,cAAI,CAAC,OAAO,EAAE,CAAC;SAChB;;wBAhDU,QAAQ;AAAR,gBAAQ,GARpB,UAAU,kKAOT,CACW,QAAQ,KAAR,QAAQ;AAAR,gBAAQ,GATpB,MAAM,CAAC,OAAO,CAAC,CASH,QAAQ,KAAR,QAAQ;AAAR,gBAAQ,GAVpB,aAAa,CAAC,WAAW,CAAC,CAUd,QAAQ,KAAR,QAAQ;eAAR,QAAQ","file":"slider/slider.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customElement, inlineView } from 'aurelia-templating';\r\nimport { bindingMode } from 'aurelia-binding';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { getBooleanFromAttributeValue } from '../common/attributes';\r\nimport { getLogger } from 'aurelia-logging';\r\n\r\n@customElement('md-slider')\r\n@inject(Element)\r\n@inlineView(`\r\n  <template class=\"slider\">\r\n  <require from=\"./slider.css\"></require>\r\n  <ul class=\"slides\">\r\n    <content select=\"li\"></content>\r\n  </ul>\r\n  </template>\r\n`)\r\nexport class MdSlider {\r\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) mdFillContainer = false;\r\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) mdHeight = 400;\r\n  @bindable() mdIndicators = true;\r\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) mdInterval = 6000;\r\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) mdTransition = 500;\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n    this.log = getLogger('md-slider');\r\n  }\r\n\r\n  attached() {\r\n    if (getBooleanFromAttributeValue(this.mdFillContainer)) {\r\n      this.element.classList.add('fullscreen');\r\n    }\r\n    this.refresh();\r\n  }\r\n\r\n  pause() {\r\n    $(this.element).slider('pause');\r\n  }\r\n\r\n  start() {\r\n    $(this.element).slider('start');\r\n  }\r\n\r\n  next() {\r\n    $(this.element).slider('next');\r\n  }\r\n\r\n  prev() {\r\n    $(this.element).slider('prev');\r\n  }\r\n\r\n  refresh() {\r\n    let options = {\r\n      height: parseInt(this.mdHeight, 10),\r\n      indicators: getBooleanFromAttributeValue(this.mdIndicators),\r\n      interval: parseInt(this.mdInterval, 10),\r\n      transition: parseInt(this.mdTransition, 10)\r\n    };\r\n    this.log.debug('refreshing slider, params:', options);\r\n    $(this.element).slider(options);\r\n  }\r\n\r\n  mdIndicatorsChanged() {\r\n    this.refresh();\r\n  }\r\n\r\n  // commented since that leads to strange effects\r\n  // mdIntervalChanged() {\r\n  //   this.refresh();\r\n  // }\r\n  //\r\n  // mdTransitionChanged() {\r\n  //   this.refresh();\r\n  // }\r\n}\r\n"]}