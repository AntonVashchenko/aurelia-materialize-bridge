{"version":3,"sources":["sidenav/sidenav.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAS,c,sBAAA,Q;AAAU,mB,sBAAA,a;;AACV,Y,+BAAA,M;;AACA,kC,qBAAA,4B;;AACA,sB,2BAAA,gB;;AACA,e,mBAAA,S;;;2BAII,S,WAFZ,cAAc,YAAd,C,UACA,OAAO,OAAP,C,UAGE,U,UACA,U,UACA,U,UACA,U;AAKD,2BAAY,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACnB,eAAK,OAAL,GAAe,OAAf;AACA,eAAK,SAAL,mBAA+B,UAAU,EAAV,EAA/B;AACA,eAAK,GAAL,GAAW,UAAU,YAAV,CAAX;AACA,eAAK,YAAL,GAAoB,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACnD,kBAAK,gBAAL,GAAwB,OAAxB;AACD,WAFmB,CAApB;AAGD;;4BAED,Q,uBAAW;AACT,eAAK,gBAAL,GAAwB,IAAI,gBAAJ,CAAqB,KAAK,OAA1B,CAAxB;AACA,cAAI,6BAA6B,KAAK,OAAlC,CAAJ,EAAgD;AAC9C,iBAAK,gBAAL,CAAsB,UAAtB,CAAiC,OAAjC;AACA,gBAAI,KAAK,MAAL,KAAgB,OAApB,EAA6B;AAE3B,mBAAK,gBAAL,CAAsB,UAAtB,CAAiC,eAAjC;AACD;AACF;;AAED,eAAK,gBAAL;AACD,S;;4BAED,Q,uBAAW;AACT,eAAK,gBAAL,CAAsB,aAAtB,CAAoC,CAAC,OAAD,EAAU,eAAV,CAApC;AACD,S;;4BAED,c,2BAAe,Q,EAAU;AACvB,cAAI,KAAK,gBAAT,EAA2B;AACzB,gBAAI,6BAA6B,QAA7B,CAAJ,EAA4C;AAC1C,mBAAK,gBAAL,CAAsB,UAAtB,CAAiC,OAAjC;AACD,aAFD,MAEO;AACL,mBAAK,gBAAL,CAAsB,aAAtB,CAAoC,OAApC;AACD;AACF;AACF,S;;;mBA3CM,E,GAAK,C;;;iBACiB,K;;;;;iBACR,M;;;;;iBACC,K;;;;;iBACA,G","file":"sidenav/sidenav.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { getBooleanFromAttributeValue } from '../common/attributes';\r\nimport { AttributeManager } from '../common/attributeManager';\r\nimport { getLogger } from 'aurelia-logging';\r\n\r\n@customElement('md-sidenav')\r\n@inject(Element)\r\nexport class MdSidenav {\r\n  static id = 0;\r\n  @bindable() mdCloseOnClick = false;\r\n  @bindable() mdEdge = 'left';\r\n  @bindable() mdFixed = false;\r\n  @bindable() mdWidth = 300;\r\n\r\n  attachedResolver;\r\n  whenAttached;\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n    this.controlId = `md-sidenav-${MdSidenav.id++}`;\r\n    this.log = getLogger('md-sidenav');\r\n    this.whenAttached = new Promise((resolve, reject) => {\r\n      this.attachedResolver = resolve;\r\n    });\r\n  }\r\n\r\n  attached() {\r\n    this.attributeManager = new AttributeManager(this.sidenav);\r\n    if (getBooleanFromAttributeValue(this.mdFixed)) {\r\n      this.attributeManager.addClasses('fixed');\r\n      if (this.mdEdge === 'right') {\r\n        // see: https://github.com/aurelia-ui-toolkits/aurelia-materialize-bridge/issues/53\r\n        this.attributeManager.addClasses('right-aligned');\r\n      }\r\n    }\r\n\r\n    this.attachedResolver();\r\n  }\r\n\r\n  detached() {\r\n    this.attributeManager.removeClasses(['fixed', 'right-aligned']);\r\n  }\r\n\r\n  mdFixedChanged(newValue) {\r\n    if (this.attributeManager) {\r\n      if (getBooleanFromAttributeValue(newValue)) {\r\n        this.attributeManager.addClasses('fixed');\r\n      } else {\r\n        this.attributeManager.removeClasses('fixed');\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}