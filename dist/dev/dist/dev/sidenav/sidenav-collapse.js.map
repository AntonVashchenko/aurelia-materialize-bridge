{"version":3,"sources":["sidenav/sidenav-collapse.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAS,c,sBAAA,Q;AAAU,qB,sBAAA,e;;AACV,qB,mBAAA,e;;AACA,Y,+BAAA,M;;AACA,kC,qBAAA,4B;;AACA,e,mBAAA,S;;;mCAII,iB,WAFZ,gBAAgB,qBAAhB,C,UACA,OAAO,OAAP,EAAgB,eAAhB,C,UAEE,U;AACD,mCAAY,OAAZ,EAAqB,eAArB,EAAsC;AAAA;;AAAA;;AACpC,eAAK,OAAL,GAAe,OAAf;AACA,eAAK,eAAL,GAAuB,eAAvB;AACA,eAAK,GAAL,GAAW,UAAU,qBAAV,CAAX;AACD;;oCAED,Q,uBAAW;AAAA;;AACT,eAAK,GAAL,CAAS,YAAT,CAAsB,IAAtB,CAA2B,YAAM;;AAI/B,kBAAK,OAAL,CAAa,YAAb,CAA0B,gBAA1B,EAA4C,MAAK,GAAL,CAAS,SAArD;AACA,gBAAI,gBAAgB;AAClB,oBAAM,MAAK,GAAL,CAAS,MAAT,IAAmB,MADP;AAElB,4BAAe,MAAK,GAAL,CAAS,OAAT,GAAmB,KAAnB,GAA2B,6BAA6B,MAAK,GAAL,CAAS,cAAtC,CAFxB;AAGlB,yBAAW,SAAS,MAAK,GAAL,CAAS,OAAlB,EAA2B,EAA3B;AAHO,aAApB;;AAMA,cAAE,MAAK,OAAP,EAAgB,OAAhB,CAAwB,aAAxB;AACD,WAZD;AAaD,S;;oCAED,Q,uBAAW,CAEV,C","file":"sidenav/sidenav-collapse.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\r\nimport { ObserverLocator } from 'aurelia-binding';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { getBooleanFromAttributeValue } from '../common/attributes';\r\nimport { getLogger } from 'aurelia-logging';\r\n\r\n@customAttribute('md-sidenav-collapse')\r\n@inject(Element, ObserverLocator)\r\nexport class MdSidenavCollapse {\r\n  @bindable() ref;\r\n  constructor(element, observerLocator) {\r\n    this.element = element;\r\n    this.observerLocator = observerLocator;\r\n    this.log = getLogger('md-sidenav-collapse');\r\n  }\r\n\r\n  attached() {\r\n    this.ref.whenAttached.then(() => {\r\n      // this.widthSubscription = this.observerLocator.getObserver(this.ref, 'mdWidth').subscribe(this.widthChanged.bind(this));\r\n      // this.fixedSubscription = this.observerLocator.getObserver(this.ref, 'fixed').subscribe(this.fixedChanged.bind(this));\r\n\r\n      this.element.setAttribute('data-activates', this.ref.controlId);\r\n      let sideNavConfig = {\r\n        edge: this.ref.mdEdge || 'left',\r\n        closeOnClick: (this.ref.mdFixed ? false : getBooleanFromAttributeValue(this.ref.mdCloseOnClick)),\r\n        menuWidth: parseInt(this.ref.mdWidth, 10)\r\n      };\r\n      // this.log.debug('sideNavConfig:', sideNavConfig);\r\n      $(this.element).sideNav(sideNavConfig);\r\n    });\r\n  }\r\n\r\n  detached() {\r\n    // this.widthSubscription.unsubscribe();\r\n  }\r\n\r\n  // fixedChanged() {\r\n  //   this.log.debug('fixedChanged');\r\n  //   $(this.element).sideNav({\r\n  //     edge: this.ref.edge || 'left',\r\n  //     closeOnClick: this.ref.closeOnClick,\r\n  //     menuWidth: parseInt(this.ref.mdWidth, 10)\r\n  //   });\r\n  // }\r\n  //\r\n  // widthChanged() {\r\n  //   this.log.debug('widthChanged');\r\n  //   $(this.element).sideNav({\r\n  //     edge: this.ref.edge || 'left',\r\n  //     closeOnClick: this.ref.closeOnClick,\r\n  //     menuWidth: parseInt(this.ref.mdWidth, 10)\r\n  //   });\r\n  // }\r\n}\r\n"]}