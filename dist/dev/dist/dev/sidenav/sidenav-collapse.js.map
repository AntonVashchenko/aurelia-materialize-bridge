{"version":3,"sources":["sidenav/sidenav-collapse.js"],"names":[],"mappings":";;;qEAOa,iBAAiB;;;;;;;;;;oCAPrB,QAAQ;2CAAE,eAAe;;wCACzB,eAAe;;2CACf,MAAM;;kCACN,SAAS;;;AAIL,uBAAiB;;;8BAAjB,iBAAiB;;uBAC3B,QAAQ,EAAE;;;;;AACA,iBAFA,iBAAiB,CAEhB,OAAO,EAAE,eAAe,EAAE;;;;;AACpC,cAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,cAAI,CAAC,eAAe,GAAG,eAAe,CAAC;AACvC,cAAI,CAAC,GAAG,GAAG,SAAS,CAAC,qBAAqB,CAAC,CAAC;SAC7C;;AANU,yBAAiB,WAQ5B,QAAQ,GAAA,oBAAG;;;AACT,cAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,YAAM;;AAI/B,kBAAK,OAAO,CAAC,YAAY,CAAC,gBAAgB,EAAE,MAAK,GAAG,CAAC,SAAS,CAAC,CAAC;AAChE,gBAAI,aAAa,GAAG;AAClB,kBAAI,EAAE,MAAK,GAAG,CAAC,MAAM,IAAI,MAAM;AAC/B,0BAAY,EAAG,MAAK,GAAG,CAAC,OAAO,GAAG,KAAK,GAAG,MAAK,GAAG,CAAC,cAAc,AAAC;AAClE,uBAAS,EAAE,QAAQ,CAAC,MAAK,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC;aAC1C,CAAC;;AAEF,aAAC,CAAC,MAAK,OAAO,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;WACxC,CAAC,CAAC;SACJ;;AAtBU,yBAAiB,WAwB5B,QAAQ,GAAA,oBAAG,EAEV;;iCA1BU,iBAAiB;AAAjB,yBAAiB,GAD7B,MAAM,CAAC,OAAO,EAAE,eAAe,CAAC,CACpB,iBAAiB,KAAjB,iBAAiB;AAAjB,yBAAiB,GAF7B,eAAe,CAAC,qBAAqB,CAAC,CAE1B,iBAAiB,KAAjB,iBAAiB;eAAjB,iBAAiB","file":"sidenav/sidenav-collapse.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\r\nimport { ObserverLocator } from 'aurelia-binding';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { getLogger } from 'aurelia-logging';\r\n\r\n@customAttribute('md-sidenav-collapse')\r\n@inject(Element, ObserverLocator)\r\nexport class MdSidenavCollapse {\r\n  @bindable() ref;\r\n  constructor(element, observerLocator) {\r\n    this.element = element;\r\n    this.observerLocator = observerLocator;\r\n    this.log = getLogger('md-sidenav-collapse');\r\n  }\r\n\r\n  attached() {\r\n    this.ref.whenAttached.then(() => {\r\n      // this.widthSubscription = this.observerLocator.getObserver(this.ref, 'mdWidth').subscribe(this.widthChanged.bind(this));\r\n      // this.fixedSubscription = this.observerLocator.getObserver(this.ref, 'fixed').subscribe(this.fixedChanged.bind(this));\r\n\r\n      this.element.setAttribute('data-activates', this.ref.controlId);\r\n      let sideNavConfig = {\r\n        edge: this.ref.mdEdge || 'left',\r\n        closeOnClick: (this.ref.mdFixed ? false : this.ref.mdCloseOnClick),\r\n        menuWidth: parseInt(this.ref.mdWidth, 10)\r\n      };\r\n      // this.log.debug('sideNavConfig:', sideNavConfig);\r\n      $(this.element).sideNav(sideNavConfig);\r\n    });\r\n  }\r\n\r\n  detached() {\r\n    // this.widthSubscription.unsubscribe();\r\n  }\r\n\r\n  // fixedChanged() {\r\n  //   this.log.debug('fixedChanged');\r\n  //   $(this.element).sideNav({\r\n  //     edge: this.ref.edge || 'left',\r\n  //     closeOnClick: this.ref.closeOnClick,\r\n  //     menuWidth: parseInt(this.ref.mdWidth, 10)\r\n  //   });\r\n  // }\r\n  //\r\n  // widthChanged() {\r\n  //   this.log.debug('widthChanged');\r\n  //   $(this.element).sideNav({\r\n  //     edge: this.ref.edge || 'left',\r\n  //     closeOnClick: this.ref.closeOnClick,\r\n  //     menuWidth: parseInt(this.ref.mdWidth, 10)\r\n  //   });\r\n  // }\r\n}\r\n"]}