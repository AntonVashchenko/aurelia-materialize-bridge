{"version":3,"sources":["collapsible/collapsible.js"],"names":[],"mappings":";;;uFASa,aAAa;;;;;;0CATlB,eAAe;mCAAE,QAAQ;iCAAE,MAAM;;uDAChC,4BAA4B;;6CAC5B,cAAc;;;AAOV,mBAAa;AACb,iBADA,aAAa,CACZ,OAAO,EAAE;;;AACnB,cAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,cAAI,CAAC,WAAW,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACrD;;AAJU,qBAAa,WAMxB,QAAQ,GAAA,oBAAG;AACT,cAAI,CAAC,WAAW,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AAC3C,cAAI,4BAA4B,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AAC7C,gBAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;WACvC;AACD,cAAI,CAAC,OAAO,EAAE,CAAC;SAChB;;AAZU,qBAAa,WAcxB,QAAQ,GAAA,oBAAG;AACT,cAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,CAAC;SAC3D;;AAhBU,qBAAa,WAkBxB,OAAO,GAAA,mBAAG;AACR,cAAI,SAAS,GAAG,4BAA4B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7D,cAAI,SAAS,EAAE;AACb,gBAAI,CAAC,OAAO,CAAC,YAAY,CAAC,kBAAkB,EAAE,WAAW,CAAC,CAAC;WAC5D,MAAM;AACL,gBAAI,CAAC,OAAO,CAAC,YAAY,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC;WAC7D;;AAED,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC;AAC1B,qBAAS,EAAT,SAAS;WACV,CAAC,CAAC;SACJ;;AA7BU,qBAAa,WA+BxB,gBAAgB,GAAA,4BAAG;AACjB,cAAI,CAAC,OAAO,EAAE,CAAC;SAChB;;6BAjCU,aAAa;AAAb,qBAAa,GAFzB,MAAM,CAAC,OAAO,CAAC,CAEH,aAAa,KAAb,aAAa;AAAb,qBAAa,GAHzB,QAAQ,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAGrC,aAAa,KAAb,aAAa;AAAb,qBAAa,GAJzB,QAAQ,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAIxC,aAAa,KAAb,aAAa;AAAb,qBAAa,GALzB,eAAe,CAAC,gBAAgB,CAAC,CAKrB,aAAa,KAAb,aAAa;eAAb,aAAa","file":"collapsible/collapsible.js","sourceRoot":"/source/","sourcesContent":["import {customAttribute, bindable, inject} from 'aurelia-framework';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\nimport { CssClassSetter } from '../common/cssClassSetter';\n\n@customAttribute('md-collapsible')\n@bindable({ name: 'accordion', defaultValue: false })\n@bindable({ name: 'popout', defaultValue: false })\n@inject(Element)\n\nexport class MdCollapsible {\n  constructor(element) {\n    this.element = element;\n    this.classSetter = new CssClassSetter(this.element);\n  }\n\n  attached() {\n    this.classSetter.addClasses('collapsible');\n    if (getBooleanFromAttributeValue(this.popout)) {\n      this.classSetter.addClasses('popout');\n    }\n    this.refresh();\n  }\n\n  detached() {\n    this.classSetter.removeClasses(['collapsible', 'popout']);\n  }\n\n  refresh() {\n    let accordion = getBooleanFromAttributeValue(this.accordion);\n    if (accordion) {\n      this.element.setAttribute('data-collapsible', 'accordion');\n    } else {\n      this.element.setAttribute('data-collapsible', 'expandable');\n    }\n\n    $(this.element).collapsible({\n      accordion\n    });\n  }\n\n  accordionChanged() {\n    this.refresh();\n  }\n}\n"]}