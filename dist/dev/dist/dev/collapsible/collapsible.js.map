{"version":3,"sources":["collapsible/collapsible.js"],"names":[],"mappings":";;;yFAUa,aAAa;;;;;;oCAVjB,QAAQ;2CAAE,eAAe;;2CACzB,MAAM;;uDACN,4BAA4B;;iDAC5B,gBAAgB;;;AAOZ,mBAAa;AACb,iBADA,aAAa,CACZ,OAAO,EAAE;;;AACnB,cAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,cAAI,CAAC,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC5D;;AAJU,qBAAa,WAMxB,QAAQ,GAAA,oBAAG;AACT,cAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AAChD,cAAI,4BAA4B,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AAC7C,gBAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;WAC5C;AACD,cAAI,CAAC,OAAO,EAAE,CAAC;SAChB;;AAZU,qBAAa,WAcxB,QAAQ,GAAA,oBAAG;AACT,cAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,CAAC;AAC/D,cAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;SAC9D;;AAjBU,qBAAa,WAmBxB,OAAO,GAAA,mBAAG;AACR,cAAI,SAAS,GAAG,4BAA4B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7D,cAAI,SAAS,EAAE;AACb,gBAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,EAAE,kBAAkB,EAAE,WAAW,EAAE,CAAC,CAAC;WAC1E,MAAM;AACL,gBAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,EAAE,kBAAkB,EAAE,YAAY,EAAE,CAAC,CAAC;WAC3E;;AAED,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC;AAC1B,qBAAS,EAAT,SAAS;WACV,CAAC,CAAC;SACJ;;AA9BU,qBAAa,WAgCxB,gBAAgB,GAAA,4BAAG;AACjB,cAAI,CAAC,OAAO,EAAE,CAAC;SAChB;;6BAlCU,aAAa;AAAb,qBAAa,GAFzB,MAAM,CAAC,OAAO,CAAC,CAEH,aAAa,KAAb,aAAa;AAAb,qBAAa,GAHzB,QAAQ,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAGrC,aAAa,KAAb,aAAa;AAAb,qBAAa,GAJzB,QAAQ,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAIxC,aAAa,KAAb,aAAa;AAAb,qBAAa,GALzB,eAAe,CAAC,gBAAgB,CAAC,CAKrB,aAAa,KAAb,aAAa;eAAb,aAAa","file":"collapsible/collapsible.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { getBooleanFromAttributeValue } from '../common/attributes';\r\nimport { AttributeManager } from '../common/attributeManager';\r\n\r\n@customAttribute('md-collapsible')\r\n@bindable({ name: 'accordion', defaultValue: false })\r\n@bindable({ name: 'popout', defaultValue: false })\r\n@inject(Element)\r\n\r\nexport class MdCollapsible {\r\n  constructor(element) {\r\n    this.element = element;\r\n    this.attributeManager = new AttributeManager(this.element);\r\n  }\r\n\r\n  attached() {\r\n    this.attributeManager.addClasses('collapsible');\r\n    if (getBooleanFromAttributeValue(this.popout)) {\r\n      this.attributeManager.addClasses('popout');\r\n    }\r\n    this.refresh();\r\n  }\r\n\r\n  detached() {\r\n    this.attributeManager.removeClasses(['collapsible', 'popout']);\r\n    this.attributeManager.removeAttributes(['data-collapsible']);\r\n  }\r\n\r\n  refresh() {\r\n    let accordion = getBooleanFromAttributeValue(this.accordion);\r\n    if (accordion) {\r\n      this.attributeManager.addAttributes({ 'data-collapsible': 'accordion' });\r\n    } else {\r\n      this.attributeManager.addAttributes({ 'data-collapsible': 'expandable' });\r\n    }\r\n\r\n    $(this.element).collapsible({\r\n      accordion\r\n    });\r\n  }\r\n\r\n  accordionChanged() {\r\n    this.refresh();\r\n  }\r\n}\r\n"]}