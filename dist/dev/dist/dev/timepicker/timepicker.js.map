{"version":3,"sources":["timepicker/timepicker.js"],"names":["bindable","customAttribute","bindingMode","inject","getBooleanFromAttributeValue","MdTimePicker","Element","defaultBindingMode","twoWay","element","updateFromElement","bind","twelveHour","attached","options","twelvehour","$","pickatime","value","on","detached","off","valueChanged","newValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,c,sBAAAA,Q;AAAUC,qB,sBAAAA,e;;AACVC,iB,mBAAAA,W;;AACAC,Y,+BAAAA,M;;AACAC,kC,qBAAAA,4B;;;8BAQKC,Y,WAFZF,OAAOG,OAAP,C,UACAL,gBAAgB,eAAhB,C,UAEED,U,UACAA,SAAS,EAACO,oBAAoBL,YAAYM,MAAjC,EAAT,C;AAED,8BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AACnB,eAAKA,OAAL,GAAeA,OAAf;AACA,eAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;+BAEDA,I,mBAAO;AACL,eAAKC,UAAL,GAAkBR,6BAA6B,KAAKQ,UAAlC,CAAlB;AACD,S;;+BAEDC,Q,uBAAW;AACT,cAAIC,UAAU;AACZC,wBAAY,KAAKH;AADL,WAAd;AAGAI,YAAE,KAAKP,OAAP,EAAgBQ,SAAhB,CAA0BH,OAA1B;AACA,eAAKL,OAAL,CAAaS,KAAb,GAAqB,KAAKA,KAA1B;AACAF,YAAE,KAAKP,OAAP,EAAgBU,EAAhB,CAAmB,QAAnB,EAA6B,KAAKT,iBAAlC;AACD,S;;+BAEDU,Q,uBAAW;AACTJ,YAAE,KAAKP,OAAP,EAAgBY,GAAhB,CAAoB,QAApB,EAA8B,KAAKX,iBAAnC;AACAM,YAAE,KAAKP,OAAP,EAAgBQ,SAAhB,CAA0B,QAA1B;AACD,S;;+BAEDP,iB,gCAAoB;AAClB,eAAKQ,KAAL,GAAa,KAAKT,OAAL,CAAaS,KAA1B;AACD,S;;+BAEDI,Y,yBAAaC,Q,EAAU;AACrB,eAAKd,OAAL,CAAaS,KAAb,GAAqBK,QAArB;AACD,S;;;;;;iBAhCwB,K","file":"../../../timepicker/timepicker.js","sourcesContent":["import {bindable, customAttribute} from 'aurelia-templating';\nimport {bindingMode} from 'aurelia-binding';\nimport {inject} from 'aurelia-dependency-injection';\nimport {getBooleanFromAttributeValue} from '../common/attributes';\n// import {fireEvent} from '../common/events';\n\n// Materialize doesn't present the full api.\n// See here for full api: https://github.com/weareoutman/clockpicker\n\n@inject(Element)\n@customAttribute('md-timepicker')\nexport class MdTimePicker {\n  @bindable() twelveHour = false;\n  @bindable({defaultBindingMode: bindingMode.twoWay}) value;\n\n  constructor(element) {\n    this.element = element;\n    this.updateFromElement = this.updateFromElement.bind(this);\n  }\n\n  bind() {\n    this.twelveHour = getBooleanFromAttributeValue(this.twelveHour);\n  }\n\n  attached() {\n    let options = {\n      twelvehour: this.twelveHour\n    };\n    $(this.element).pickatime(options);\n    this.element.value = this.value;\n    $(this.element).on('change', this.updateFromElement);\n  }\n\n  detached() {\n    $(this.element).off('change', this.updateFromElement);\n    $(this.element).pickatime('remove');\n  }\n\n  updateFromElement() {\n    this.value = this.element.value;\n  }\n\n  valueChanged(newValue) {\n    this.element.value = newValue;\n  }\n}\n"]}