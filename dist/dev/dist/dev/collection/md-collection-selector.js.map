{"version":3,"sources":["collection/md-collection-selector.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAS,c,sBAAA,Q;AAAU,mB,sBAAA,a;;AACV,Y,+BAAA,M;;AACA,gB,mBAAA,U;;AACA,0B,iBAAA,oB;;;iCAII,e,WAFZ,cAAc,wBAAd,C,UACA,OAAO,OAAP,C,UAEE,U,UACA,Y;AAED,iCAAY,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AACnB,eAAK,OAAL,GAAe,OAAf;AACD;;kCAED,iB,8BAAkB,Q,EAAU;AAC1B,+BAAqB,KAAK,OAA1B,EAAmC,mBAAnC,EAAwD,EAAE,MAAM,KAAK,IAAb,EAAmB,YAAY,KAAK,UAApC,EAAxD;AACD,S;;;;;;;;;iBAR0B,K","file":"collection/md-collection-selector.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { observable } from 'aurelia-binding';\r\nimport { fireMaterializeEvent } from '../common/events';\r\n\r\n@customElement('md-collection-selector')\r\n@inject(Element)\r\nexport class MdlListSelector {\r\n  @bindable() item;\r\n  @observable() isSelected = false;\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  isSelectedChanged(newValue) {\r\n    fireMaterializeEvent(this.element, 'selection-changed', { item: this.item, isSelected: this.isSelected });\r\n  }\r\n}\r\n"]}