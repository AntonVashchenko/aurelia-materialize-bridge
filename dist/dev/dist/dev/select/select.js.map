{"version":3,"sources":["select/select.js"],"names":[],"mappings":";;;uEAQa,QAAQ;;;;;;2CARZ,eAAe;;wCACf,eAAe;;2CACf,MAAM;;;;gCAEN,SAAS;;;AAIL,cAAQ;AAGR,iBAHA,QAAQ,CAGP,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE;;;eAFlD,cAAc,GAAG,KAAK;;AAGpB,cAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,cAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3E,cAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjF,cAAI,CAAC,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;AAC7C,cAAI,CAAC,eAAe,GAAG,eAAe,CAAC;AACvC,cAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;SAC9E;;AAVU,gBAAQ,WAWnB,QAAQ,GAAA,oBAAG;AACT,cAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;;AAK7D,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,eAAe,EAAE,CAAC;AAClC,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,4BAA4B,CAAC,CAAC;SACjE;;AAnBU,gBAAQ,WAqBnB,QAAQ,GAAA,oBAAG;AACT,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,4BAA4B,CAAC,CAAC;AACjE,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;AAC3C,cAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;SAClC;;AAzBU,gBAAQ,WA2BnB,4BAA4B,GAAA,wCAAG;;AAW7B,cAAI,CAAC,IAAI,CAAC,cAAc,EAAE;AACxB,gBAAI,CAAC,GAAG,CAAC,KAAK,CAAC,8BAA8B,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;AAC1F,gBAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AAC3B,qBAAS,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AAClC,gBAAI,CAAC,GAAG,CAAC,KAAK,CAAC,0BAA0B,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;;AAIrE,gBAAI,CAAC,cAAc,GAAG,KAAK,CAAC;WAC7B;SACF;;AAhDU,gBAAQ,WAkDnB,yBAAyB,GAAA,mCAAC,QAAQ,EAAE;AAClC,cAAI,CAAC,GAAG,CAAC,KAAK,CAAC,2BAA2B,EAAE,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;AAC7E,cAAI,CAAC,IAAI,CAAC,cAAc,EAAE;AACxB,aAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,eAAe,EAAE,CAAC;WACnC;SACF;;wBAvDU,QAAQ;AAAR,gBAAQ,GADpB,eAAe,CAAC,WAAW,CAAC,CAChB,QAAQ,KAAR,QAAQ;AAAR,gBAAQ,GAFpB,MAAM,CAAC,OAAO,EAAE,UAAU,EAAE,eAAe,CAAC,CAEhC,QAAQ,KAAR,QAAQ;eAAR,QAAQ","file":"select/select.js","sourceRoot":"/source/","sourcesContent":["import { customAttribute } from 'aurelia-templating';\nimport { ObserverLocator } from 'aurelia-binding';\nimport { inject } from 'aurelia-dependency-injection';\nimport * as LogManager from 'aurelia-logging';\nimport { fireEvent } from '../common/events';\n\n@inject(Element, LogManager, ObserverLocator)\n@customAttribute('md-select')\nexport class MdSelect {\n  _suspendUpdate = false;\n\n  constructor(element, logManager, observerLocator) {\n    this.element = element;\n    this.handleChangeFromViewModel = this.handleChangeFromViewModel.bind(this);\n    this.handleChangeFromNativeSelect = this.handleChangeFromNativeSelect.bind(this);\n    this.log = LogManager.getLogger('md-select');\n    this.observerLocator = observerLocator;\n    this.valueObserver = this.observerLocator.getObserver(this.element, 'value');\n  }\n  attached() {\n    this.valueObserver.subscribe(this.handleChangeFromViewModel);\n    // $(this.element).material_select(() => {\n    //   this.log.warn('materialize callback', $(this.element).val());\n    //   this.handleChangeFromNativeSelect();\n    // });\n    $(this.element).material_select();\n    $(this.element).on('change', this.handleChangeFromNativeSelect);\n  }\n\n  detached() {\n    $(this.element).off('change', this.handleChangeFromNativeSelect);\n    $(this.element).material_select('destroy');\n    this.valueObserver.unsubscribe();\n  }\n\n  handleChangeFromNativeSelect() {\n    // Aurelia's select observer doesn't get noticed when something changes the\n    // select value directly (this.element.value = \"something\"). So we trigger\n    // the change here.\n    // this.valueObserver.value = $(this.element).val();\n    // this.valueObserver.synchronizeValue();\n    // this.valueObserver.synchronizeOptions();\n    // this._suspendUpdate = true;\n    // this.valueObserver.notify();\n    // this._suspendUpdate = false;\n\n    if (!this._suspendUpdate) {\n      this.log.debug('handleChangeFromNativeSelect', this.element.value, $(this.element).val());\n      this._suspendUpdate = true;\n      fireEvent(this.element, 'change');\n      this.log.debug('this.valueObserver.value', this.valueObserver.value);\n      // this.valueObserver.value = $(this.element).val();\n      // this.valueObserver.notify();\n\n      this._suspendUpdate = false;\n    }\n  }\n\n  handleChangeFromViewModel(newValue) {\n    this.log.debug('handleChangeFromViewModel', newValue, $(this.element).val());\n    if (!this._suspendUpdate) {\n      $(this.element).material_select();\n    }\n  }\n}\n"]}