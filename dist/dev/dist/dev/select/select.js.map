{"version":3,"sources":["select/select.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAS;;AACA;;AACA;;AACA;;AACG;;AACH;;;0BAII,mBAFZ,OAAO,OAAP,EAAgB,UAAhB,EAA4B,eAA5B,EAA6C,SAA7C,WACA,gBAAgB,WAAhB;AAIC,iBAHW,QAGX,CAAY,OAAZ,EAAqB,UAArB,EAAiC,eAAjC,EAAkD,SAAlD,EAA6D;gCAHlD,UAGkD;;eAF7D,iBAAiB,MAE4C;;AAC3D,eAAK,OAAL,GAAe,OAAf,CAD2D;AAE3D,eAAK,SAAL,GAAiB,SAAjB,CAF2D;AAG3D,eAAK,yBAAL,GAAiC,KAAK,yBAAL,CAA+B,IAA/B,CAAoC,IAApC,CAAjC,CAH2D;AAI3D,eAAK,4BAAL,GAAoC,KAAK,4BAAL,CAAkC,IAAlC,CAAuC,IAAvC,CAApC,CAJ2D;AAK3D,eAAK,GAAL,GAAW,WAAW,SAAX,CAAqB,WAArB,CAAX,CAL2D;AAM3D,eAAK,eAAL,GAAuB,eAAvB,CAN2D;AAO3D,eAAK,aAAL,GAAqB,KAAK,eAAL,CAAqB,WAArB,CAAiC,KAAK,OAAL,EAAc,OAA/C,CAArB,CAP2D;SAA7D;;AAHW,2BAYX,+BAAW;AACT,eAAK,aAAL,CAAmB,SAAnB,CAA6B,KAAK,yBAAL,CAA7B,CADS;;AAMT,YAAE,KAAK,OAAL,CAAF,CAAgB,eAAhB,GANS;AAOT,YAAE,KAAK,OAAL,CAAF,CAAgB,EAAhB,CAAmB,QAAnB,EAA6B,KAAK,4BAAL,CAA7B,CAPS;;;AAZA,2BAsBX,+BAAW;AACT,YAAE,KAAK,OAAL,CAAF,CAAgB,GAAhB,CAAoB,QAApB,EAA8B,KAAK,4BAAL,CAA9B,CADS;AAET,YAAE,KAAK,OAAL,CAAF,CAAgB,eAAhB,CAAgC,SAAhC,EAFS;AAGT,eAAK,aAAL,CAAmB,WAAnB,GAHS;;;AAtBA,2BA4BX,6BAAU;;;AACR,eAAK,SAAL,CAAe,SAAf,CAAyB,YAAM;AAC7B,cAAE,MAAK,OAAL,CAAF,CAAgB,eAAhB,CAAgC,SAAhC,EAD6B;AAE7B,cAAE,MAAK,OAAL,CAAF,CAAgB,eAAhB,GAF6B;WAAN,CAAzB,CADQ;;;AA5BC,2BAmCX,uEAA+B;;AAW7B,cAAI,CAAC,KAAK,cAAL,EAAqB;AACxB,iBAAK,GAAL,CAAS,KAAT,CAAe,8BAAf,EAA+C,KAAK,OAAL,CAAa,KAAb,EAAoB,EAAE,KAAK,OAAL,CAAF,CAAgB,GAAhB,EAAnE,EADwB;AAExB,iBAAK,cAAL,GAAsB,IAAtB,CAFwB;AAGxB,sBAAU,KAAK,OAAL,EAAc,QAAxB,EAHwB;AAIxB,iBAAK,GAAL,CAAS,KAAT,CAAe,0BAAf,EAA2C,KAAK,aAAL,CAAmB,KAAnB,CAA3C,CAJwB;;;AAQxB,iBAAK,cAAL,GAAsB,KAAtB,CARwB;WAA1B;;;AA9CS,2BA0DX,+DAA0B,UAAU;AAClC,eAAK,GAAL,CAAS,KAAT,CAAe,2BAAf,EAA4C,QAA5C,EAAsD,EAAE,KAAK,OAAL,CAAF,CAAgB,GAAhB,EAAtD,EADkC;AAElC,cAAI,CAAC,KAAK,cAAL,EAAqB;AACxB,cAAE,KAAK,OAAL,CAAF,CAAgB,eAAhB,GADwB;WAA1B;;;eA5DS","file":"select/select.js","sourceRoot":"/source/","sourcesContent":["import { customAttribute } from 'aurelia-templating';\nimport { ObserverLocator } from 'aurelia-binding';\nimport { inject } from 'aurelia-dependency-injection';\nimport { TaskQueue } from 'aurelia-task-queue';\nimport * as LogManager from 'aurelia-logging';\nimport { fireEvent } from '../common/events';\n\n@inject(Element, LogManager, ObserverLocator, TaskQueue)\n@customAttribute('md-select')\nexport class MdSelect {\n  _suspendUpdate = false;\n\n  constructor(element, logManager, observerLocator, taskQueue) {\n    this.element = element;\n    this.taskQueue = taskQueue;\n    this.handleChangeFromViewModel = this.handleChangeFromViewModel.bind(this);\n    this.handleChangeFromNativeSelect = this.handleChangeFromNativeSelect.bind(this);\n    this.log = LogManager.getLogger('md-select');\n    this.observerLocator = observerLocator;\n    this.valueObserver = this.observerLocator.getObserver(this.element, 'value');\n  }\n  attached() {\n    this.valueObserver.subscribe(this.handleChangeFromViewModel);\n    // $(this.element).material_select(() => {\n    //   this.log.warn('materialize callback', $(this.element).val());\n    //   this.handleChangeFromNativeSelect();\n    // });\n    $(this.element).material_select();\n    $(this.element).on('change', this.handleChangeFromNativeSelect);\n  }\n\n  detached() {\n    $(this.element).off('change', this.handleChangeFromNativeSelect);\n    $(this.element).material_select('destroy');\n    this.valueObserver.unsubscribe();\n  }\n\n  refresh() {\n    this.taskQueue.queueTask(() => {\n      $(this.element).material_select('destroy');\n      $(this.element).material_select();\n    });\n  }\n\n  handleChangeFromNativeSelect() {\n    // Aurelia's select observer doesn't get noticed when something changes the\n    // select value directly (this.element.value = \"something\"). So we trigger\n    // the change here.\n    // this.valueObserver.value = $(this.element).val();\n    // this.valueObserver.synchronizeValue();\n    // this.valueObserver.synchronizeOptions();\n    // this._suspendUpdate = true;\n    // this.valueObserver.notify();\n    // this._suspendUpdate = false;\n\n    if (!this._suspendUpdate) {\n      this.log.debug('handleChangeFromNativeSelect', this.element.value, $(this.element).val());\n      this._suspendUpdate = true;\n      fireEvent(this.element, 'change');\n      this.log.debug('this.valueObserver.value', this.valueObserver.value);\n      // this.valueObserver.value = $(this.element).val();\n      // this.valueObserver.notify();\n\n      this._suspendUpdate = false;\n    }\n  }\n\n  handleChangeFromViewModel(newValue) {\n    this.log.debug('handleChangeFromViewModel', newValue, $(this.element).val());\n    if (!this._suspendUpdate) {\n      $(this.element).material_select();\n    }\n  }\n}\n"]}