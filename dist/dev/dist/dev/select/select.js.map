{"version":3,"sources":["select/select.js"],"names":[],"mappings":";;;kEAOa,QAAQ;;;;;;;;;;oCAPZ,QAAQ;2CAAE,eAAe;;oCACzB,WAAW;;2CACX,MAAM;;;;;AAKF,cAAQ;;;8BAAR,QAAQ;;uBAClB,QAAQ,CAAC;AACR,8BAAkB,EAAE,WAAW,CAAC,MAAM;WACvC,CAAC;;;;;AACS,iBAJA,QAAQ,CAIP,OAAO,EAAE,UAAU,EAAE;;;;;AAC/B,cAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,cAAI,CAAC,aAAa,GAAG,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClE,cAAI,CAAC,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;SAE9C;;AATU,gBAAQ,WAUnB,QAAQ,GAAA,oBAAG;AACT,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,eAAe,EAAE,CAAC;AAClC,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SAClD;;AAbU,gBAAQ,WAenB,QAAQ,GAAA,oBAAG;AACT,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;AAClD,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;SAC5C;;AAlBU,gBAAQ,WAuBnB,4BAA4B,GAAA,wCAAG;AAE7B,cAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;SACvC;;AA1BU,gBAAQ,WA4BnB,eAAe,GAAA,2BAAG;AAEhB,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACnC,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,eAAe,EAAE,CAAC;SACnC;;wBAhCU,QAAQ;AAAR,gBAAQ,GADpB,eAAe,CAAC,WAAW,CAAC,CAChB,QAAQ,KAAR,QAAQ;AAAR,gBAAQ,GAFpB,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,CAEf,QAAQ,KAAR,QAAQ;eAAR,QAAQ","file":"select/select.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\nimport { bindingMode } from 'aurelia-binding';\nimport { inject } from 'aurelia-dependency-injection';\nimport * as LogManager from 'aurelia-logging';\n\n@inject(Element, LogManager)\n@customAttribute('md-select')\nexport class MdSelect {\n  @bindable({\n    defaultBindingMode: bindingMode.twoWay\n  }) selected;\n  constructor(element, logManager) {\n    this.element = element;\n    this.changeHandler = this.handleChangeFromNativeSelect.bind(this);\n    this.log = LogManager.getLogger('md-select');\n    // this.log = getLogger('md-select');\n  }\n  attached() {\n    $(this.element).material_select();\n    $(this.element).on('change', this.changeHandler);\n  }\n\n  detached() {\n    $(this.element).off('change', this.changeHandler);\n    $(this.element).material_select('destroy');\n  }\n\n  /*\n   * This handler is called when the native <select> changes.\n   */\n  handleChangeFromNativeSelect() {\n    // this.selected = this.element.value;\n    this.selected = $(this.element).val();\n  }\n\n  selectedChanged() {\n    // this.element.value = this.selected;\n    $(this.element).val(this.selected);\n    $(this.element).material_select();\n  }\n}\n"]}