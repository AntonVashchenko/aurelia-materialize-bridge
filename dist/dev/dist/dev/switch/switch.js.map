{"version":3,"sources":["switch/switch.js"],"names":[],"mappings":";;;kFAOa,QAAQ;;;;;;;;;;oCAPZ,QAAQ;yCAAE,aAAa;;oCACvB,WAAW;;2CACX,MAAM;;uDACN,4BAA4B;;;AAIxB,cAAQ;;;8BAAR,QAAQ;;uBAClB,QAAQ,CAAC;AACR,8BAAkB,EAAE,WAAW,CAAC,MAAM;WACvC,CAAC;;;;;uBACD,QAAQ,EAAE;;;;;uBACV,QAAQ,EAAE;;mBAAc,KAAK;;;;;uBAC7B,QAAQ,EAAE;;mBAAa,IAAI;;;;;AAEjB,iBARA,QAAQ,CAQP,OAAO,EAAE;;;;;;;;;;;AACnB,cAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,cAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClD;;AAXU,gBAAQ,WAanB,QAAQ,GAAA,oBAAG;AACT,cAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,4BAA4B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACrE,cAAI,4BAA4B,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AACjD,gBAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;WAC/B;AACD,cAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;SAC7D;;AAnBU,gBAAQ,WAqBnB,QAAQ,GAAA,oBAAG;AACT,cAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;SAChE;;AAvBU,gBAAQ,WAyBnB,YAAY,GAAA,wBAAG;AACb,cAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;SACxC;;AA3BU,gBAAQ,WA6BnB,gBAAgB,GAAA,0BAAC,QAAQ,EAAE;AACzB,cAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,gBAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC;WACpC;SACF;;wBAjCU,QAAQ;AAAR,gBAAQ,GADpB,MAAM,CAAC,OAAO,CAAC,CACH,QAAQ,KAAR,QAAQ;AAAR,gBAAQ,GAFpB,aAAa,CAAC,WAAW,CAAC,CAEd,QAAQ,KAAR,QAAQ;eAAR,QAAQ","file":"switch/switch.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\nimport { bindingMode } from 'aurelia-binding';\nimport { inject } from 'aurelia-dependency-injection';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\n\n@customElement('md-switch')\n@inject(Element)\nexport class MdSwitch {\n  @bindable({\n    defaultBindingMode: bindingMode.twoWay\n  }) mdChecked;\n  @bindable() mdDisabled;\n  @bindable() mdLabelOff = 'Off';\n  @bindable() mdLabelOn = 'On';\n\n  constructor(element) {\n    this.element = element;\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  attached() {\n    this.checkbox.checked = getBooleanFromAttributeValue(this.mdChecked);\n    if (getBooleanFromAttributeValue(this.mdDisabled)) {\n      this.checkbox.disabled = true;\n    }\n    this.checkbox.addEventListener('change', this.handleChange);\n  }\n\n  detached() {\n    this.checkbox.removeEventListener('change', this.handleChange);\n  }\n\n  handleChange() {\n    this.mdChecked = this.checkbox.checked;\n  }\n\n  mdCheckedChanged(newValue) {\n    if (this.checkbox) {\n      this.checkbox.checked = !!newValue;\n    }\n  }\n}\n"]}