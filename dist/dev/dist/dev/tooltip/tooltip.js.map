{"version":3,"sources":["tooltip/tooltip.js"],"names":[],"mappings":";;;2DAOa,SAAS;;;;;;;;;;oCAPb,QAAQ;2CAAE,eAAe;;2CACzB,MAAM;;iDACN,gBAAgB;;;AAKZ,eAAS;;;8BAAT,SAAS;;uBACnB,QAAQ,EAAE;;mBAAY,QAAQ;;;;;uBAC9B,QAAQ,EAAE;;mBAAS,EAAE;;;;;uBACrB,QAAQ,EAAE;;mBAAQ,EAAE;;;;;AAEV,iBALA,SAAS,CAKR,OAAO,EAAE;;;;;;;;;AACnB,cAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,cAAI,CAAC,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC5D;;AARU,iBAAS,WAUpB,QAAQ,GAAA,oBAAG;AACT,cAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;AAC/C,cAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,EAAE,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE,cAAc,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;AACnG,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;SAC9D;;AAdU,iBAAS,WAgBpB,QAAQ,GAAA,oBAAG;AACT,WAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAClC,cAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;AAClD,cAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC,CAAC;SAC3E;;yBApBU,SAAS;AAAT,iBAAS,GADrB,MAAM,CAAC,OAAO,CAAC,CACH,SAAS,KAAT,SAAS;AAAT,iBAAS,GAFrB,eAAe,CAAC,YAAY,CAAC,CAEjB,SAAS,KAAT,SAAS;eAAT,SAAS","file":"tooltip/tooltip.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\nimport { inject } from 'aurelia-dependency-injection';\nimport { AttributeManager } from '../common/attributeManager';\n// import { getBooleanFromAttributeValue } from '../common/attributes';\n\n@customAttribute('md-tooltip')\n@inject(Element)\nexport class MdTooltip {\n  @bindable() position = 'bottom';\n  @bindable() delay = 50;\n  @bindable() text = '';\n\n  constructor(element) {\n    this.element = element;\n    this.attributeManager = new AttributeManager(this.element);\n  }\n\n  attached() {\n    this.attributeManager.addClasses('tooltipped');\n    this.attributeManager.addAttributes({ 'data-position': this.position, 'data-tooltip': this.text });\n    $(this.element).tooltip({ delay: parseInt(this.delay, 10) });\n  }\n\n  detached() {\n    $(this.element).tooltip('remove');\n    this.attributeManager.removeClasses('tooltipped');\n    this.attributeManager.removeAttributes(['data-position', 'data-tooltip']);\n  }\n}\n"]}