{"version":3,"sources":["pagination/pagination.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAS;AAAU;;AACV;;AACA;;AACA;;AACA;;;8BAII,uBAFZ,cAAc,eAAd,WACA,OAAO,OAAP,WAEE,SAAS;AACR,4BAAoB,YAAY,MAAZ;OADrB,WAGA,SAAS;AACR,4BAAoB,YAAY,MAAZ;OADrB,WAGA,oBACA;AAED,iBAVW,YAUX,CAAY,OAAZ,EAAqB;gCAVV,cAUU;;;;;;;;;;AACnB,eAAK,OAAL,GAAe,OAAf,CADmB;SAArB;;AAVW,+BAcX,uBAAO;AAEL,eAAK,OAAL,GAAe,SAAS,KAAK,OAAL,EAAc,EAAvB,CAAf,CAFK;AAGL,eAAK,cAAL,GAAsB,6BAA6B,KAAK,cAAL,CAAnD,CAHK;;;AAdI,+BAoBX,uCAAc,MAAM;AAClB,eAAK,YAAL,GAAoB,IAApB,CADkB;AAElB,+BAAqB,KAAK,OAAL,EAAc,cAAnC,EAAmD,KAAK,YAAL,CAAnD,CAFkB;;;AApBT,+BAyBX,uCAAe;AACb,cAAI,KAAK,YAAL,GAAoB,CAApB,EAAuB;AACzB,iBAAK,aAAL,CAAmB,CAAnB,EADyB;WAA3B;;;AA1BS,+BA+BX,qCAAc;AACZ,cAAI,KAAK,YAAL,GAAoB,KAAK,OAAL,EAAc;AACpC,iBAAK,aAAL,CAAmB,KAAK,OAAL,CAAnB,CADoC;WAAtC;;;AAhCS,+BAqCX,6CAAkB;AAChB,cAAI,KAAK,YAAL,GAAoB,CAApB,EAAuB;AACzB,iBAAK,aAAL,CAAmB,KAAK,YAAL,GAAoB,CAApB,CAAnB,CADyB;WAA3B;;;AAtCS,+BA2CX,qCAAc;AACZ,cAAI,KAAK,YAAL,GAAoB,KAAK,OAAL,EAAc;AACpC,iBAAK,aAAL,CAAmB,KAAK,YAAL,GAAoB,CAApB,CAAnB,CADoC;WAAtC;;;eA5CS;;;;iBAGO;;;;;iBAGL;;;;;iBACiB;;;;;iBACD","file":"pagination/pagination.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\nimport { bindingMode } from 'aurelia-binding';\nimport { inject } from 'aurelia-dependency-injection';\nimport { fireMaterializeEvent } from '../common/events';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\n\n@customElement('md-pagination')\n@inject(Element)\nexport class MdPagination {\n  @bindable({\n    defaultBindingMode: bindingMode.twoWay\n  }) mdActivePage = 1;\n  @bindable({\n    defaultBindingMode: bindingMode.oneWay\n  }) mdPages = 5;\n  @bindable() mdShowFirstLast = true;\n  @bindable() mdShowPrevNext = true;\n\n  constructor(element) {\n    this.element = element;\n  }\n\n  bind() {\n    // attached() throws unhandled exceptions\n    this.mdPages = parseInt(this.mdPages, 10);\n    this.mdShowPrevNext = getBooleanFromAttributeValue(this.mdShowPrevNext);\n  }\n\n  setActivePage(page) {\n    this.mdActivePage = page;\n    fireMaterializeEvent(this.element, 'page-changed', this.mdActivePage);\n  }\n\n  setFirstPage() {\n    if (this.mdActivePage > 1) {\n      this.setActivePage(1);\n    }\n  }\n\n  setLastPage() {\n    if (this.mdActivePage < this.mdPages) {\n      this.setActivePage(this.mdPages);\n    }\n  }\n\n  setPreviousPage() {\n    if (this.mdActivePage > 1) {\n      this.setActivePage(this.mdActivePage - 1);\n    }\n  }\n\n  setNextPage() {\n    if (this.mdActivePage < this.mdPages) {\n      this.setActivePage(this.mdActivePage + 1);\n    }\n  }\n}\n"]}