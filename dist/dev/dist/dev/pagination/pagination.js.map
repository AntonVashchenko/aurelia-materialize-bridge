{"version":3,"sources":["pagination/pagination.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAS,c,sBAAA,Q;AAAU,mB,sBAAA,a;;AACV,iB,mBAAA,W;;AACA,Y,+BAAA,M;;AACA,0B,iBAAA,oB;;AACA,kC,qBAAA,4B;;;8BAII,Y,WAFZ,cAAc,eAAd,C,UACA,OAAO,OAAP,C,UAEE,SAAS;AACR,4BAAoB,YAAY;AADxB,OAAT,C,UAGA,SAAS;AACR,4BAAoB,YAAY;AADxB,OAAT,C,UAGA,U,UACA,U;AAED,8BAAY,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACnB,eAAK,OAAL,GAAe,OAAf;AACD;;+BAED,I,mBAAO;AAEL,eAAK,OAAL,GAAe,SAAS,KAAK,OAAd,EAAuB,EAAvB,CAAf;AACA,eAAK,cAAL,GAAsB,6BAA6B,KAAK,cAAlC,CAAtB;AACD,S;;+BAED,a,0BAAc,I,EAAM;AAClB,eAAK,YAAL,GAAoB,IAApB;AACA,+BAAqB,KAAK,OAA1B,EAAmC,cAAnC,EAAmD,KAAK,YAAxD;AACD,S;;+BAED,Y,2BAAe;AACb,cAAI,KAAK,YAAL,GAAoB,CAAxB,EAA2B;AACzB,iBAAK,aAAL,CAAmB,CAAnB;AACD;AACF,S;;+BAED,W,0BAAc;AACZ,cAAI,KAAK,YAAL,GAAoB,KAAK,OAA7B,EAAsC;AACpC,iBAAK,aAAL,CAAmB,KAAK,OAAxB;AACD;AACF,S;;+BAED,e,8BAAkB;AAChB,cAAI,KAAK,YAAL,GAAoB,CAAxB,EAA2B;AACzB,iBAAK,aAAL,CAAmB,KAAK,YAAL,GAAoB,CAAvC;AACD;AACF,S;;+BAED,W,0BAAc;AACZ,cAAI,KAAK,YAAL,GAAoB,KAAK,OAA7B,EAAsC;AACpC,iBAAK,aAAL,CAAmB,KAAK,YAAL,GAAoB,CAAvC;AACD;AACF,S;;;;;;iBA5CiB,C;;;;;iBAGL,C;;;;;iBACiB,I;;;;;iBACD,I","file":"pagination/pagination.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\r\nimport { bindingMode } from 'aurelia-binding';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { fireMaterializeEvent } from '../common/events';\r\nimport { getBooleanFromAttributeValue } from '../common/attributes';\r\n\r\n@customElement('md-pagination')\r\n@inject(Element)\r\nexport class MdPagination {\r\n  @bindable({\r\n    defaultBindingMode: bindingMode.twoWay\r\n  }) mdActivePage = 1;\r\n  @bindable({\r\n    defaultBindingMode: bindingMode.oneWay\r\n  }) mdPages = 5;\r\n  @bindable() mdShowFirstLast = true;\r\n  @bindable() mdShowPrevNext = true;\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  bind() {\r\n    // attached() throws unhandled exceptions\r\n    this.mdPages = parseInt(this.mdPages, 10);\r\n    this.mdShowPrevNext = getBooleanFromAttributeValue(this.mdShowPrevNext);\r\n  }\r\n\r\n  setActivePage(page) {\r\n    this.mdActivePage = page;\r\n    fireMaterializeEvent(this.element, 'page-changed', this.mdActivePage);\r\n  }\r\n\r\n  setFirstPage() {\r\n    if (this.mdActivePage > 1) {\r\n      this.setActivePage(1);\r\n    }\r\n  }\r\n\r\n  setLastPage() {\r\n    if (this.mdActivePage < this.mdPages) {\r\n      this.setActivePage(this.mdPages);\r\n    }\r\n  }\r\n\r\n  setPreviousPage() {\r\n    if (this.mdActivePage > 1) {\r\n      this.setActivePage(this.mdActivePage - 1);\r\n    }\r\n  }\r\n\r\n  setNextPage() {\r\n    if (this.mdActivePage < this.mdPages) {\r\n      this.setActivePage(this.mdActivePage + 1);\r\n    }\r\n  }\r\n}\r\n"]}