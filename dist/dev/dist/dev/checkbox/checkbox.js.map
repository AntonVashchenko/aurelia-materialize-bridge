{"version":3,"sources":["checkbox/checkbox.js"],"names":[],"mappings":";;;oGAQa,UAAU;;;;;;;;;;oCARd,QAAQ;yCAAE,aAAa;;oCACvB,WAAW;;2CACX,MAAM;;iDACN,gBAAgB;;uDAChB,4BAA4B;;;AAIxB,gBAAU;;;8BAAV,UAAU;;uBAEpB,QAAQ,CAAC;AACR,8BAAkB,EAAE,WAAW,CAAC,MAAM;WACvC,CAAC;;;;;uBACD,QAAQ,EAAE;;;;;uBACV,QAAQ,EAAE;;;;;iBALC,CAAC;;;;AAOF,iBARA,UAAU,CAQT,OAAO,EAAE;;;;;;;;;AACnB,cAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,cAAI,CAAC,SAAS,oBAAkB,UAAU,CAAC,EAAE,EAAE,AAAE,CAAC;AAClD,cAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClD;;AAZU,kBAAU,WAcrB,QAAQ,GAAA,oBAAG;AACT,cAAI,CAAC,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC5D,cAAI,4BAA4B,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AACjD,gBAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;WAC/C;AACD,cAAI,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE;AAC3B,gBAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,IAAI,CAAC;WACpC,MAAM;AACL,gBAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,KAAK,CAAC;WACrC;AACD,cAAI,4BAA4B,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AACjD,gBAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;WAC/B;AACD,cAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,4BAA4B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACrE,cAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;SAC7D;;AA7BU,kBAAU,WA+BrB,QAAQ,GAAA,oBAAG;AACT,cAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC;AAC/D,cAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;SAChE;;AAlCU,kBAAU,WAoCrB,YAAY,GAAA,wBAAG;AACb,cAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;SACxC;;AAtCU,kBAAU,WAwCrB,gBAAgB,GAAA,0BAAC,QAAQ,EAAE;AACzB,cAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,gBAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC;WACpC;SACF;;AA5CU,kBAAU,WA8CrB,iBAAiB,GAAA,2BAAC,QAAQ,EAAE;AAC1B,cAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,gBAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;WACrC;SACF;;0BAlDU,UAAU;AAAV,kBAAU,GADtB,MAAM,CAAC,OAAO,CAAC,CACH,UAAU,KAAV,UAAU;AAAV,kBAAU,GAFtB,aAAa,CAAC,aAAa,CAAC,CAEhB,UAAU,KAAV,UAAU;eAAV,UAAU","file":"checkbox/checkbox.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\r\nimport { bindingMode } from 'aurelia-binding';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { AttributeManager } from '../common/attributeManager';\r\nimport { getBooleanFromAttributeValue } from '../common/attributes';\r\n\r\n@customElement('md-checkbox')\r\n@inject(Element)\r\nexport class MdCheckbox {\r\n  static id = 0;\r\n  @bindable({\r\n    defaultBindingMode: bindingMode.twoWay\r\n  }) mdChecked;\r\n  @bindable() mdDisabled;\r\n  @bindable() mdFilledIn;\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n    this.controlId = `md-checkbox-${MdCheckbox.id++}`;\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  attached() {\r\n    this.attributeManager = new AttributeManager(this.checkbox);\r\n    if (getBooleanFromAttributeValue(this.mdFilledIn)) {\r\n      this.attributeManager.addClasses('filled-in');\r\n    }\r\n    if (this.mdChecked === null) {\r\n      this.checkbox.indeterminate = true;\r\n    } else {\r\n      this.checkbox.indeterminate = false;\r\n    }\r\n    if (getBooleanFromAttributeValue(this.mdDisabled)) {\r\n      this.checkbox.disabled = true;\r\n    }\r\n    this.checkbox.checked = getBooleanFromAttributeValue(this.mdChecked);\r\n    this.checkbox.addEventListener('change', this.handleChange);\r\n  }\r\n\r\n  detached() {\r\n    this.attributeManager.removeClasses(['filled-in', 'disabled']);\r\n    this.checkbox.removeEventListener('change', this.handleChange);\r\n  }\r\n\r\n  handleChange() {\r\n    this.mdChecked = this.checkbox.checked;\r\n  }\r\n\r\n  mdCheckedChanged(newValue) {\r\n    if (this.checkbox) {\r\n      this.checkbox.checked = !!newValue;\r\n    }\r\n  }\r\n\r\n  mdDisabledChanged(newValue) {\r\n    if (this.checkbox) {\r\n      this.checkbox.disabled = !!newValue;\r\n    }\r\n  }\r\n}\r\n"]}