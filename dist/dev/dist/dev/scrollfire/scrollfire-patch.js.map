{"version":3,"sources":["scrollfire/scrollfire-patch.js"],"names":[],"mappings":";;;MACa,eAAe;;;;;;;AAAf,qBAAe;iBAAf,eAAe;gCAAf,eAAe;;eAC1B,OAAO,GAAG,KAAK;;;AADJ,uBAAe,WAG1B,KAAK,GAAA,iBAAG;AACN,cAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACjB,gBAAI,CAAC,OAAO,GAAG,IAAI,CAAC;;AAEpB,kBAAM,CAAC,WAAW,CAAC,UAAU,GAAG,UAAS,OAAO,EAAE;AAChD,kBAAI,SAAS,GAAG,KAAK,CAAC;AACtB,oBAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,YAAW;AAC3C,yBAAS,GAAG,IAAI,CAAC;eAClB,CAAC,CAAC;;AAGH,yBAAW,CAAC,YAAW;AACrB,oBAAI,SAAS,EAAE;AACb,2BAAS,GAAG,KAAK,CAAC;;AAElB,sBAAI,YAAY,GAAG,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;AAC3D,uBAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAEvC,wBAAI,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AACvB,wBAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;AAC9B,wBAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;AAC1B,wBAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;;AAE9B,wBAAI,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACtD,wBAAK,cAAc,KAAK,IAAI,EAAE;AAC5B,0BAAI,aAAa,GAAG,cAAc,CAAC,qBAAqB,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC;;AAEpF,0BAAI,YAAY,GAAI,aAAa,GAAG,MAAM,AAAC,EAAE;AAC3C,4BAAI,KAAK,CAAC,IAAI,KAAK,IAAI,EAAE;AACvB,8BAAI,OAAO,QAAQ,AAAC,KAAK,QAAQ,EAAE;AACjC,gCAAI,YAAY,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAC1C,wCAAY,EAAE,CAAC;2BAChB,MAAM,IAAI,OAAO,QAAQ,AAAC,KAAK,UAAU,EAAE;AAC1C,oCAAQ,EAAE,CAAC;2BACZ;AACD,+BAAK,CAAC,IAAI,GAAG,IAAI,CAAC;yBACnB;uBACF;qBACF;mBACF;iBACF;eACF,EAAE,GAAG,CAAC,CAAC;aACT,CAAC;WACH;SACF;;eA/CU,eAAe","file":"scrollfire/scrollfire-patch.js","sourceRoot":"/source/","sourcesContent":["/* eslint no-new-func:0 */\nexport class ScrollfirePatch {\n  patched = false;\n\n  patch() {\n    if (!this.patched) {\n      this.patched = true;\n\n      window.Materialize.scrollFire = function(options) {\n        let didScroll = false;\n        window.addEventListener('scroll', function() {\n          didScroll = true;\n        });\n\n        // Rate limit to 100ms\n        setInterval(function() {\n          if (didScroll) {\n            didScroll = false;\n\n            let windowScroll = window.pageYOffset + window.innerHeight;\n            for (let i = 0; i < options.length; i++) {\n              // Get options from each line\n              let value = options[i];\n              let selector = value.selector;\n              let offset = value.offset;\n              let callback = value.callback;\n\n              let currentElement = document.querySelector(selector);\n              if ( currentElement !== null) {\n                let elementOffset = currentElement.getBoundingClientRect().top + window.pageYOffset;\n\n                if (windowScroll > (elementOffset + offset)) {\n                  if (value.done !== true) {\n                    if (typeof(callback) === 'string') {\n                      let callbackFunc = new Function(callback);\n                      callbackFunc();\n                    } else if (typeof(callback) === 'function') {\n                      callback();\n                    }\n                    value.done = true;\n                  }\n                }\n              }\n            }\n          }\n        }, 100);\n      };\n    }\n  }\n}\n"]}