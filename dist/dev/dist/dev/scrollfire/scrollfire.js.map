{"version":3,"sources":["scrollfire/scrollfire.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAS,qB,sBAAA,e;;AACA,Y,+BAAA,M;;AACA,e,mBAAA,S;;;8BAII,Y,WAFZ,gBAAgB,eAAhB,C,UACA,OAAO,OAAP,C;AAGC,8BAAY,OAAZ,EAAqB;AAAA;;AAAA,eADrB,QACqB,GADV,CACU;;AACnB,eAAK,OAAL,GAAe,OAAf;AACA,eAAK,GAAL,GAAW,UAAU,eAAV,CAAX;AACD;;+BAED,Q,uBAAW;AAAA;;AACT,cAAI,UAAU,EAAE,wBAAF,EAA4B,KAAK,OAAjC,CAAd;AACA,cAAI,QAAQ,MAAR,GAAiB,CAArB,EAAwB;AAAA;AACtB,oBAAK,GAAL,CAAS,KAAT,CAAe,SAAf,EAA0B,OAA1B;AACA,kBAAI,YAAJ;AACA,kBAAI,UAAU,EAAd;AACA,sBAAQ,IAAR,CAAa,UAAC,CAAD,EAAI,EAAJ,EAAW;AACtB,oBAAI,SAAS,EAAE,EAAF,CAAb;AACA,oBAAI,CAAC,OAAO,IAAP,CAAY,IAAZ,CAAL,EAAwB;AACtB,yBAAO,IAAP,CAAY,IAAZ,4BAA0C,KAAK,QAAL,EAA1C;AACD;AACD,wBAAQ,IAAR,CAAa;AACX,4BAAU,MAAM,OAAO,IAAP,CAAY,IAAZ,CADL;AAEX,4BAAU,OAAO,GAAP,CAAW,CAAX,EAAc,EAAd,CAAiB,sBAAjB,EAAyC,SAAzC,CAAmD,QAFlD;AAGX,0BAAQ,SAAS,OAAO,GAAP,CAAW,CAAX,EAAc,EAAd,CAAiB,sBAAjB,EAAyC,SAAzC,CAAmD,MAA5D,EAAoE,EAApE;AAHG,iBAAb;AAKD,eAVD;AAWA,kBAAI,QAAQ,MAAR,GAAiB,CAArB,EAAwB;AACtB,sBAAK,GAAL,CAAS,KAAT,CAAe,4CAAf,EAA6D,OAA7D;AACA,4BAAY,UAAZ,CAAuB,OAAvB;AACD;AAlBqB;AAmBvB;AACF,S","file":"scrollfire/scrollfire.js","sourceRoot":"/source/","sourcesContent":["import { customAttribute } from 'aurelia-templating';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { getLogger } from 'aurelia-logging';\r\n\r\n@customAttribute('md-scrollfire')\r\n@inject(Element)\r\nexport class MdScrollfire {\r\n  targetId = 0;\r\n  constructor(element) {\r\n    this.element = element;\r\n    this.log = getLogger('md-scrollfire');\r\n  }\r\n\r\n  attached() {\r\n    let targets = $('[md-scrollfire-target]', this.element);\r\n    if (targets.length > 0) {\r\n      this.log.debug('targets', targets);\r\n      let self = this;\r\n      let options = [];\r\n      targets.each((i, el) => {\r\n        let target = $(el);\r\n        if (!target.attr('id')) {\r\n          target.attr('id', `md-scrollfire-target-${self.targetId++}`);\r\n        }\r\n        options.push({\r\n          selector: '#' + target.attr('id'),\r\n          callback: target.get(0).au['md-scrollfire-target'].viewModel.callback,\r\n          offset: parseInt(target.get(0).au['md-scrollfire-target'].viewModel.offset, 10)\r\n        });\r\n      });\r\n      if (options.length > 0) {\r\n        this.log.debug('configuring scrollFire with these options:', options);\r\n        Materialize.scrollFire(options);\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}