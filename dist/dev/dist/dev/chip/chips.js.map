{"version":3,"sources":["chip/chips.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQ,c,sBAAA,Q;AAAU,qB,sBAAA,e;;AACV,Y,+BAAA,M;;AACA,e,mBAAA,S;;;yBAMK,O,WAFZ,gBAAgB,UAAhB,C,UACA,OAAO,OAAP,C,UAEE,U,UACA,U,UACA,U;AAED,yBAAY,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AACnB,eAAK,OAAL,GAAe,OAAf;AACA,eAAK,GAAL,GAAW,UAAU,UAAV,CAAX;;AAEA,eAAK,SAAL,GAAiB,KAAK,SAAL,CAAe,IAAf,CAAoB,IAApB,CAAjB;AACA,eAAK,YAAL,GAAoB,KAAK,YAAL,CAAkB,IAAlB,CAAuB,IAAvB,CAApB;AACA,eAAK,YAAL,GAAoB,KAAK,YAAL,CAAkB,IAAlB,CAAuB,IAAvB,CAApB;AACD;;0BAED,Q,uBAAW;AACT,cAAI,UAAU;AACZ,kBAAM,KAAK,IADC;AAEZ,yBAAa,KAAK,WAFN;AAGZ,kCAAsB,KAAK;AAHf,WAAd;AAKA,YAAE,KAAK,OAAP,EAAgB,aAAhB,CAA8B,OAA9B;AACA,YAAE,KAAK,OAAP,EAAgB,EAAhB,CAAmB,UAAnB,EAA+B,KAAK,SAApC;AACA,YAAE,KAAK,OAAP,EAAgB,EAAhB,CAAmB,aAAnB,EAAkC,KAAK,YAAvC;AACA,YAAE,KAAK,OAAP,EAAgB,EAAhB,CAAmB,aAAnB,EAAkC,KAAK,YAAvC;AACD,S;;0BAED,Q,uBAAW,CAEV,C;;0BAED,S,sBAAU,C,EAAG,I,EAAM,CAElB,C;;0BACD,Y,yBAAa,C,EAAG,I,EAAM,CAErB,C;;0BACD,Y,yBAAa,C,EAAG,I,EAAM,CAErB,C;;;;;;iBArCkB,E;;;;;iBACO,E;;;;;iBACS,E","file":"chip/chips.js","sourceRoot":"/source/","sourcesContent":["import {bindable, customAttribute} from 'aurelia-templating';\r\nimport {inject} from 'aurelia-dependency-injection';\r\nimport {getLogger} from 'aurelia-logging';\r\n\n// import {fireEvent} from '../common/events';\n\n@customAttribute('md-chips')\r\n@inject(Element)\r\nexport class MdChips {\r\n  @bindable() data = [];\r\n  @bindable() placeholder = '';\r\n  @bindable() secondaryPlaceholder = '';\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n    this.log = getLogger('md-chips');\r\n\r\n    this.onChipAdd = this.onChipAdd.bind(this);\r\n    this.onChipDelete = this.onChipDelete.bind(this);\r\n    this.onChipSelect = this.onChipSelect.bind(this);\r\n  }\r\n\r\n  attached() {\r\n    let options = {\r\n      data: this.data,\r\n      placeholder: this.placeholder,\r\n      secondaryPlaceholder: this.secondaryPlaceholder\r\n    };\r\n    $(this.element).material_chip(options);\r\n    $(this.element).on('chip.add', this.onChipAdd);\r\n    $(this.element).on('chip.delete', this.onChipDelete);\r\n    $(this.element).on('chip.select', this.onChipSelect);\r\n  }\r\n\r\n  detached() {\r\n    //\r\n  }\r\n\r\n  onChipAdd(e, chip) {\n    // fireEvent(this.element, 'change');\n  }\n  onChipDelete(e, chip) {\n    // fireEvent(this.element, 'change');\n  }\n  onChipSelect(e, chip) {\n    // fireEvent(this.element, 'change');\n  }\n}\r\n"]}