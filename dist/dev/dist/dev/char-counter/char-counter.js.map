{"version":3,"sources":["char-counter/char-counter.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAS,c,sBAAA,Q;AAAU,qB,sBAAA,e;;AACV,Y,+BAAA,M;;AACA,sB,2BAAA,gB;;;+BAII,a,WAFZ,gBAAgB,iBAAhB,C,UACA,OAAO,OAAP,C,UAEE,U;AAED,+BAAY,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,eAAK,OAAL,GAAe,OAAf;AACA,eAAK,gBAAL,GAAwB,IAAI,gBAAJ,CAAqB,KAAK,OAA1B,CAAxB;AACD;;gCAED,Q,uBAAW;AAAA;;AACT,eAAK,MAAL,GAAc,SAAS,KAAK,MAAd,EAAsB,EAAtB,CAAd;;AAIA,cAAI,KAAK,OAAL,CAAa,OAAb,CAAqB,WAArB,OAAuC,OAA3C,EAAoD;AAClD,iBAAK,gBAAL,CAAsB,aAAtB,CAAoC,EAAE,UAAU,KAAK,MAAjB,EAApC;AACA,cAAE,KAAK,OAAP,EAAgB,gBAAhB;AACD,WAHD,MAGO;AACL,cAAE,KAAK,OAAP,EAAgB,IAAhB,CAAqB,OAArB,EAA8B,IAA9B,CAAmC,UAAC,CAAD,EAAI,EAAJ,EAAW;AAAE,gBAAE,EAAF,EAAM,IAAN,CAAW,QAAX,EAAqB,MAAK,MAA1B;AAAoC,aAApF;AACA,cAAE,KAAK,OAAP,EAAgB,IAAhB,CAAqB,OAArB,EAA8B,gBAA9B;AACD;AACF,S;;gCAED,Q,uBAAW;AACT,eAAK,gBAAL,CAAsB,gBAAtB,CAAuC,CAAC,QAAD,CAAvC;AACD,S;;;;;;iBAvBoB,G","file":"char-counter/char-counter.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { AttributeManager } from '../common/attributeManager';\r\n\r\n@customAttribute('md-char-counter')\r\n@inject(Element)\r\nexport class MdCharCounter {\r\n  @bindable() length = 120;\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n    this.attributeManager = new AttributeManager(this.element);\r\n  }\r\n\r\n  attached() {\r\n    this.length = parseInt(this.length, 10);\r\n\r\n    // attach to input element explicitly, so this counter can be used on\r\n    // containers (or custom elements like md-input)\r\n    if (this.element.tagName.toUpperCase() === 'INPUT') {\r\n      this.attributeManager.addAttributes({ 'length': this.length });\r\n      $(this.element).characterCounter();\r\n    } else {\r\n      $(this.element).find('input').each((i, el) => { $(el).attr('length', this.length); });\r\n      $(this.element).find('input').characterCounter();\r\n    }\r\n  }\r\n\r\n  detached() {\r\n    this.attributeManager.removeAttributes(['length']);\r\n  }\r\n}\r\n"]}