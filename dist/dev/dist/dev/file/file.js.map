{"version":3,"sources":["file/file.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAS,c,sBAAA,Q;AAAU,mB,sBAAA,a;;AACV,iB,mBAAA,W;;AACA,Y,+BAAA,M;;AACA,e,iBAAA,S;AAAW,0B,iBAAA,oB;;AACX,kC,qBAAA,4B;;;6BAII,W,WAFZ,cAAc,SAAd,C,UACA,OAAO,OAAP,C,UAEE,U,UACA,SAAS;AACR,4BAAoB,YAAY;AADxB,OAAT,C,UAGA,SAAS;AACR,4BAAoB,YAAY;AADxB,OAAT,C;AAOD,6BAAY,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAJrB,KAIqB,GAJb,EAIa;AAAA,eAFrB,cAEqB,GAFJ,KAEI;;AACnB,eAAK,OAAL,GAAe,OAAf;AACA,eAAK,2BAAL,GAAmC,KAAK,2BAAL,CAAiC,IAAjC,CAAsC,IAAtC,CAAnC;AACD;;8BAED,Q,uBAAW;AACT,eAAK,UAAL,GAAkB,6BAA6B,KAAK,UAAlC,CAAlB;AACA,YAAE,KAAK,QAAP,EAAiB,EAAjB,CAAoB,QAApB,EAA8B,KAAK,2BAAnC;AACD,S;;8BAED,Q,uBAAW;AACT,YAAE,KAAK,OAAP,EAAgB,GAAhB,CAAoB,QAApB,EAA8B,KAAK,2BAAnC;AACD,S;;8BAED,2B,0CAA8B;AAC5B,cAAI,CAAC,KAAK,cAAV,EAA0B;AACxB,iBAAK,cAAL,GAAsB,IAAtB;AACA,sBAAU,KAAK,QAAf,EAAyB,QAAzB,EAAmC,EAAE,OAAO,KAAK,KAAd,EAAnC;AACA,iCAAqB,KAAK,QAA1B,EAAoC,QAApC,EAA8C,EAAE,OAAO,KAAK,KAAd,EAA9C;AACA,iBAAK,cAAL,GAAsB,KAAtB;AACD;AACF,S;;;;;;iBAhCuB,M;;;;;iBAGR,K","file":"file/file.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\r\nimport { bindingMode } from 'aurelia-binding';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { fireEvent, fireMaterializeEvent } from '../common/events';\r\nimport { getBooleanFromAttributeValue } from '../common/attributes';\r\n\r\n@customElement('md-file')\r\n@inject(Element)\r\nexport class MdFileInput {\r\n  @bindable() mdCaption = 'File';\r\n  @bindable({\r\n    defaultBindingMode: bindingMode.oneTime\r\n  }) mdMultiple = false;\r\n  @bindable({\r\n    defaultBindingMode: bindingMode.twoWay\r\n  }) mdLabelValue;\r\n  files = [];\r\n\r\n  _suspendUpdate = false;\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n    this.handleChangeFromNativeInput = this.handleChangeFromNativeInput.bind(this);\r\n  }\r\n\r\n  attached() {\r\n    this.mdMultiple = getBooleanFromAttributeValue(this.mdMultiple);\r\n    $(this.filePath).on('change', this.handleChangeFromNativeInput);\r\n  }\r\n\r\n  detached() {\r\n    $(this.element).off('change', this.handleChangeFromNativeInput);\r\n  }\r\n\r\n  handleChangeFromNativeInput() {\r\n    if (!this._suspendUpdate) {\r\n      this._suspendUpdate = true;\r\n      fireEvent(this.filePath, 'change', { files: this.files });\r\n      fireMaterializeEvent(this.filePath, 'change', { files: this.files });\r\n      this._suspendUpdate = false;\r\n    }\r\n  }\r\n}\r\n"]}