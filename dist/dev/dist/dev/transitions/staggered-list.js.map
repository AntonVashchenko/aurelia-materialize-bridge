{"version":3,"sources":["transitions/staggered-list.js"],"names":[],"mappings":";;;oDAOa,eAAe;;;;;;;;;;oCAPnB,QAAQ;2CAAE,eAAe;;2CACzB,MAAM;;kCACN,SAAS;;;AAKL,qBAAe;;;8BAAf,eAAe;;uBACzB,QAAQ,EAAE;;;;;AAEA,iBAHA,eAAe,CAGd,OAAO,EAAE;;;;;AACnB,cAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,cAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,cAAI,CAAC,GAAG,GAAG,SAAS,CAAC,mBAAmB,CAAC,CAAC;SAC3C;;AAPU,uBAAe,WAS1B,QAAQ,GAAA,oBAAG;AACT,cAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;AACzD,cAAI,CAAC,aAAa,EAAE,CAAC;SACtB;;AAZU,uBAAe,WAc1B,QAAQ,GAAA,oBAAG;AACT,cAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;SAC7D;;AAhBU,uBAAe,WAkB1B,WAAW,GAAA,uBAAG;AACZ,qBAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACzC;;AApBU,uBAAe,WAsB1B,aAAa,GAAA,yBAAG;AACd,cAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAC5C,YAAE,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,UAAA,IAAI,EAAI;AAC7B,gBAAI,OAAO,GAAG,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC;AACpD,gBAAI,OAAO,KAAK,CAAC,EAAE;AACjB,kBAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC;aACxB;WACF,CAAC,CAAC;SACJ;;+BA9BU,eAAe;AAAf,uBAAe,GAD3B,MAAM,CAAC,OAAO,CAAC,CACH,eAAe,KAAf,eAAe;AAAf,uBAAe,GAF3B,eAAe,CAAC,mBAAmB,CAAC,CAExB,eAAe,KAAf,eAAe;eAAf,eAAe","file":"transitions/staggered-list.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\nimport { inject } from 'aurelia-dependency-injection';\nimport { getLogger } from 'aurelia-logging';\nimport 'materialize';\n\n@customAttribute('md-staggered-list')\n@inject(Element)\nexport class MdStaggeredList {\n  @bindable() ref;\n\n  constructor(element) {\n    this.element = element;\n    this.staggerList = this.staggerList.bind(this);\n    this.log = getLogger('md-staggered-list');\n  }\n\n  attached() {\n    this.element.addEventListener('click', this.staggerList);\n    this.ensureOpacity();\n  }\n\n  detached() {\n    this.element.removeEventListener('click', this.staggerList);\n  }\n\n  staggerList() {\n    Materialize.showStaggeredList(this.ref);\n  }\n\n  ensureOpacity() {\n    let items = this.ref.querySelectorAll('li');\n    [].forEach.call(items, item => {\n      let opacity = window.getComputedStyle(item).opacity;\n      if (opacity !== 0) {\n        item.style.opacity = 0;\n      }\n    });\n  }\n}\n"]}