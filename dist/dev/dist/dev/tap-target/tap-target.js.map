{"version":3,"sources":["tap-target/tap-target.js"],"names":["bindable","customElement","inject","getLogger","MdTapTarget","Element","element","log","bind","mdRef","Error","id","getAttribute","controlId","setAttribute","open","$","tapTarget","close"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,mB,sBAAAA,a;;AACVC,Y,+BAAAA,M;;AACAC,e,mBAAAA,S;;;6BAIIC,W,WAFZH,cAAc,eAAd,C,UACAC,OAAOG,OAAP,C,UAGEL,U;AAED,6BAAYM,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,eAAKA,OAAL,GAAeA,OAAf;AACA,eAAKC,GAAL,GAAWJ,UAAU,eAAV,CAAX;AACD;;8BAEDK,I,mBAAO;AACL,cAAI,CAAC,KAAKC,KAAV,EAAiB;AACf,kBAAM,IAAIC,KAAJ,CAAU,0CAAV,CAAN;AACD,WAFD,MAEO;AACL,gBAAIC,KAAK,KAAKF,KAAL,CAAWG,YAAX,CAAwB,IAAxB,CAAT;AACA,gBAAI,CAACD,EAAL,EAAS;AACPA,sCAAsBP,YAAYS,SAAZ,EAAtB;AACA,mBAAKJ,KAAL,CAAWK,YAAX,CAAwB,IAAxB,EAA8BH,EAA9B;AACD;AACD,iBAAKL,OAAL,CAAaQ,YAAb,CAA0B,gBAA1B,EAA4CH,EAA5C;AACD;AACF,S;;8BAEDI,I,mBAAO;AACLC,YAAE,KAAKV,OAAP,EAAgBW,SAAhB,CAA0B,MAA1B;AACD,S;;8BAEDC,K,oBAAQ;AACNF,YAAE,KAAKV,OAAP,EAAgBW,SAAhB,CAA0B,OAA1B;AACD,S;;;mBA3BMJ,S,GAAY,C;;;iBACC,I","file":"../../../tap-target/tap-target.js","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\nimport { inject } from 'aurelia-dependency-injection';\nimport { getLogger } from 'aurelia-logging';\n\n@customElement('md-tap-target')\n@inject(Element)\nexport class MdTapTarget {\n  static controlId = 0;\n  @bindable() mdRef = null;\n\n  constructor(element) {\n    this.element = element;\n    this.log = getLogger('md-tap-target');\n  }\n\n  bind() {\n    if (!this.mdRef) {\n      throw new Error('md-tap-target needs a referenced element');\n    } else {\n      let id = this.mdRef.getAttribute('id');\n      if (!id) {\n        id = `md-tap-target-${MdTapTarget.controlId++}`;\n        this.mdRef.setAttribute('id', id);\n      }\n      this.element.setAttribute('data-activates', id);\n    }\n  }\n\n  open() {\n    $(this.element).tapTarget('open');\n  }\n\n  close() {\n    $(this.element).tapTarget('close');\n  }\n}\n"]}