{"version":3,"sources":["input/input.js"],"names":[],"mappings":";;;mHASa,OAAO;;;;;;;;;;oCATX,QAAQ;yCAAE,aAAa;;oCACvB,WAAW;;2CACX,MAAM;;oCACN,SAAS;;uDACT,4BAA4B;;iDAC5B,oBAAoB;;;AAIhB,aAAO;;;8BAAP,OAAO;;uBAGjB,QAAQ,EAAE;;mBAAW,EAAE;;;;;uBACvB,QAAQ,CAAC;AACR,8BAAkB,EAAE,WAAW,CAAC,OAAO;WACxC,CAAC;;mBAAiB,EAAE;;;;;uBACpB,QAAQ,CAAC;AACR,8BAAkB,EAAE,WAAW,CAAC,OAAO;WACxC,CAAC;;mBAAc,KAAK;;;;;uBACpB,QAAQ,CAAC;AACR,8BAAkB,EAAE,WAAW,CAAC,OAAO;WACxC,CAAC;;mBAAU,MAAM;;;;;uBACjB,QAAQ,CAAC;AACR,8BAAkB,EAAE,WAAW,CAAC,OAAO;WACxC,CAAC;;mBAAc,KAAK;;;;;uBACpB,QAAQ,CAAC;AACR,8BAAkB,EAAE,WAAW,CAAC,MAAM;WACvC,CAAC;;mBAAW,EAAE;;;;;iBAjBH,CAAC;;;;AAmBF,iBApBA,OAAO,CAoBN,OAAO,EAAE,SAAS,EAAE,aAAa,EAAE;;;;;;;;;;;;;;;AAC7C,cAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,cAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,cAAI,CAAC,SAAS,iBAAe,OAAO,CAAC,EAAE,EAAE,AAAE,CAAC;AAC5C,cAAI,CAAC,aAAa,GAAG,aAAa,CAAC;SACpC;;AAzBU,eAAO,WA2BlB,QAAQ,GAAA,oBAAG;AACT,cAAI,CAAC,UAAU,GAAG,4BAA4B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAChE,cAAI,4BAA4B,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AACjD,gBAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;WACtC;AACD,cAAI,IAAI,CAAC,aAAa,EAAE;AACtB,gBAAI,CAAC,KAAK,CAAC,YAAY,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;AAC3D,gBAAI,CAAC,MAAM,EAAE,CAAC;WACf;SACF;;AApCU,eAAO,WAsClB,cAAc,GAAA,0BAAG;AACf,cAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;AAC5B,cAAI,IAAI,CAAC,UAAU,EAAE;AACnB,aAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;WACrC;SACF;;uBA3CU,OAAO;AAAP,eAAO,GADnB,MAAM,CAAC,OAAO,EAAE,SAAS,EAAE,oBAAoB,CAAC,CACpC,OAAO,KAAP,OAAO;AAAP,eAAO,GAFnB,aAAa,CAAC,UAAU,CAAC,CAEb,OAAO,KAAP,OAAO;eAAP,OAAO","file":"input/input.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\r\nimport { bindingMode } from 'aurelia-binding';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { TaskQueue } from 'aurelia-task-queue';\r\nimport { getBooleanFromAttributeValue } from '../common/attributes';\r\nimport { MdInputUpdateService } from './input-update-service';\r\n\r\n@customElement('md-input')\r\n@inject(Element, TaskQueue, MdInputUpdateService)\r\nexport class MdInput {\r\n  static id = 0;\r\n\r\n  @bindable() mdLabel = '';\r\n  @bindable({\r\n    defaultBindingMode: bindingMode.oneTime\r\n  }) mdPlaceholder = '';\r\n  @bindable({\r\n    defaultBindingMode: bindingMode.oneTime\r\n  }) mdTextArea = false;\r\n  @bindable({\r\n    defaultBindingMode: bindingMode.oneTime\r\n  }) mdType = 'text';\r\n  @bindable({\r\n    defaultBindingMode: bindingMode.oneTime\r\n  }) mdValidate = false;\r\n  @bindable({\r\n    defaultBindingMode: bindingMode.twoWay\r\n  }) mdValue = '';\r\n\r\n  constructor(element, taskQueue, updateService) {\r\n    this.element = element;\r\n    this.taskQueue = taskQueue;\r\n    this.controlId = `md-input-${MdInput.id++}`;\r\n    this.updateService = updateService;\r\n  }\r\n\r\n  attached() {\r\n    this.mdTextArea = getBooleanFromAttributeValue(this.mdTextArea);\r\n    if (getBooleanFromAttributeValue(this.mdValidate)) {\r\n      this.input.classList.add('validate');\r\n    }\r\n    if (this.mdPlaceholder) {\r\n      this.input.setAttribute('placeholder', this.mdPlaceholder);\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  mdValueChanged() {\r\n    this.updateService.update();\r\n    if (this.mdTextArea) {\r\n      $(this.input).trigger('autoresize');\r\n    }\r\n  }\r\n}\r\n"]}