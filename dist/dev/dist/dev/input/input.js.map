{"version":3,"sources":["input/input.js"],"names":["bindable","customElement","bindingMode","inject","TaskQueue","getBooleanFromAttributeValue","MdInputUpdateService","fireEvent","MdInput","Element","defaultBindingMode","oneTime","twoWay","element","taskQueue","updateService","_suspendUpdate","mdUnrenderValidateResults","results","renderer","result","valid","removeMessage","removeValidationClasses","input","mdRenderValidateResults","label","find","x","removeAttribute","target","hasAttribute","addMessage","addValidationClasses","controlId","id","blurOnEnter","bind","mdReadonly","mdTextArea","mdShowErrortext","mdBlurOnEnter","attached","mdValidate","classList","add","mdValidateError","setAttribute","mdValidateSuccess","mdPlaceholder","update","mdType","$","siblings","addClass","attachEventHandlers","detached","detachEventHandlers","undefined","blur","focus","mdValueChanged","is","trigger","addEventListener","removeEventListener","e","keyCode"],"mappings":"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","file":"../../../input/input.js","sourcesContent":["import {bindable, customElement} from 'aurelia-templating';\nimport {bindingMode} from 'aurelia-binding';\nimport {inject} from 'aurelia-dependency-injection';\nimport {TaskQueue} from 'aurelia-task-queue';\nimport {getBooleanFromAttributeValue} from '../common/attributes';\nimport {MdInputUpdateService} from './input-update-service';\nimport {fireEvent} from '../common/events';\n\n@customElement('md-input')\n@inject(Element, TaskQueue, MdInputUpdateService)\nexport class MdInput {\n  static id = 0;\n\n  @bindable() mdLabel = '';\n  @bindable() mdBlurOnEnter = false;\n  @bindable() mdDisabled = false;\n  @bindable() mdReadonly = false;\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) mdPlaceholder = '';\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) mdTextArea = false;\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) mdType = 'text';\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) mdStep = 'any';\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) mdValidate = false;\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) mdShowErrortext = true;\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) mdUpdateTrigger = ['input', 'change'];\n  @bindable() mdValidateError;\n  @bindable() mdValidateSuccess;\n  @bindable({\n    defaultBindingMode: bindingMode.twoWay\n  }) mdValue = '';\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) mdMin = null;\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) mdMax = null;\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) mdName = '';\n\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) mdMaxlength = 524288;\n\n  _suspendUpdate = false;\n\n  constructor(element, taskQueue, updateService) {\n    this.element = element;\n    this.taskQueue = taskQueue;\n    this.controlId = `md-input-${MdInput.id++}`;\n    this.updateService = updateService;\n    this.blurOnEnter = this.blurOnEnter.bind(this);\n  }\n\n  bind() {\n    this.mdReadonly = getBooleanFromAttributeValue(this.mdReadonly);\n    this.mdTextArea = getBooleanFromAttributeValue(this.mdTextArea);\n    this.mdShowErrortext = getBooleanFromAttributeValue(this.mdShowErrortext);\n    this.mdBlurOnEnter = getBooleanFromAttributeValue(this.mdBlurOnEnter);\n  }\n\n  attached() {\n    if (getBooleanFromAttributeValue(this.mdValidate)) {\n      this.input.classList.add('validate');\n    }\n    if (this.mdValidateError)  {\n      this.label.setAttribute('data-error', this.mdValidateError);\n    }\n    if (this.mdValidateSuccess)  {\n      this.label.setAttribute('data-success', this.mdValidateSuccess);\n    }\n    if (this.mdPlaceholder) {\n      this.input.setAttribute('placeholder', this.mdPlaceholder);\n    }\n    if (this.mdShowErrortext) {\n      this.input.setAttribute('data-show-errortext', this.mdShowErrortext);\n    }\n    this.updateService.update();\n\n    // special case: time inputs are not covered by Materialize\n    if (this.mdType === 'time') {\n      $(this.input).siblings('label').addClass('active');\n    }\n    this.attachEventHandlers();\n    this.element.mdUnrenderValidateResults = this.mdUnrenderValidateResults;\n    this.element.mdRenderValidateResults = this.mdRenderValidateResults;\n  }\n\n  detached() {\n    this.detachEventHandlers();\n    this.element.mdUnrenderValidateResults = undefined;\n    this.element.mdRenderValidateResults = undefined;\n  }\n\n  blur() {\n    fireEvent(this.element, 'blur');\n  }\n\n  focus() {\n    this.input.focus();\n    fireEvent(this.element, 'focus');\n  }\n\n  mdValueChanged() {\n    if (!$(this.input).is(':focus')) {\n      this.updateService.update();\n    }\n    if (this.mdTextArea) {\n      $(this.input).trigger('autoresize');\n    }\n  }\n\n  attachEventHandlers() {\n    if (this.mdBlurOnEnter) {\n      this.element.addEventListener('keyup', this.blurOnEnter);\n    }\n  }\n\n  detachEventHandlers() {\n    if (this.mdBlurOnEnter) {\n      this.element.removeEventListener('keyup', this.blurOnEnter);\n    }\n  }\n\n  blurOnEnter(e) {\n    if (e.keyCode && e.keyCode === 13) {\n      this.input.blur();\n    }\n  }\n\n  mdUnrenderValidateResults = (results, renderer) => {\n    for(let result of results) {\n      if (!result.valid) {\n        renderer.removeMessage(this.element, result);\n      }\n    }\n    renderer.removeValidationClasses(this.input);\n  };\n\n  mdRenderValidateResults = (results, renderer) => {\n    if(this.label && results.find(x => !x.valid)) {\n      this.label.removeAttribute('data-error');\n    }\n    if (this.input) {\n      for(let result of results) {\n        if (!result.valid) {\n          result.target = this.input;\n          if(this.input.hasAttribute('data-show-errortext')) {\n            renderer.addMessage(this.element, result);\n          }\n        }\n      }\n    }\n    renderer.addValidationClasses(this.input, !results.find(x => !x.valid));\n  };\n\n}\n"]}