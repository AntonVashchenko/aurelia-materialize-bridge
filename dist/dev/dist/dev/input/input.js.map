{"version":3,"sources":["input/input.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAS;AAAU;;AACV;;AACA;;AACA;;AACA;;AACA;;;yBAII,kBAFZ,cAAc,UAAd,WACA,OAAO,OAAP,EAAgB,SAAhB,EAA2B,oBAA3B,WAIE,oBACA,SAAS;AACR,4BAAoB,YAAY,OAAZ;OADrB,WAGA,SAAS;AACR,4BAAoB,YAAY,OAAZ;OADrB,WAGA,SAAS;AACR,4BAAoB,YAAY,OAAZ;OADrB,WAGA,SAAS;AACR,4BAAoB,YAAY,OAAZ;OADrB,WAGA,oBACA,SAAS;AACR,4BAAoB,YAAY,MAAZ;OADrB;AAID,iBArBW,OAqBX,CAAY,OAAZ,EAAqB,SAArB,EAAgC,aAAhC,EAA+C;gCArBpC,SAqBoC;;;;;;;;;;;;;;;;AAC7C,eAAK,OAAL,GAAe,OAAf,CAD6C;AAE7C,eAAK,SAAL,GAAiB,SAAjB,CAF6C;AAG7C,eAAK,SAAL,iBAA6B,QAAQ,EAAR,EAA7B,CAH6C;AAI7C,eAAK,aAAL,GAAqB,aAArB,CAJ6C;SAA/C;;AArBW,0BA4BX,+BAAW;AACT,eAAK,UAAL,GAAkB,6BAA6B,KAAK,UAAL,CAA/C,CADS;AAET,cAAI,6BAA6B,KAAK,UAAL,CAAjC,EAAmD;AACjD,iBAAK,KAAL,CAAW,SAAX,CAAqB,GAArB,CAAyB,UAAzB,EADiD;WAAnD;AAGA,cAAI,KAAK,eAAL,EAAuB;AACzB,iBAAK,KAAL,CAAW,YAAX,CAAwB,YAAxB,EAAsC,KAAK,eAAL,CAAtC,CADyB;WAA3B;AAGA,cAAI,KAAK,aAAL,EAAoB;AACtB,iBAAK,KAAL,CAAW,YAAX,CAAwB,aAAxB,EAAuC,KAAK,aAAL,CAAvC,CADsB;AAEtB,iBAAK,MAAL,GAFsB;WAAxB;;;AApCS,0BA0CX,2CAAiB;AACf,eAAK,aAAL,CAAmB,MAAnB,GADe;AAEf,cAAI,KAAK,UAAL,EAAiB;AACnB,cAAE,KAAK,KAAL,CAAF,CAAc,OAAd,CAAsB,YAAtB,EADmB;WAArB;;;eA5CS;mBACJ,KAAK;;;iBAEU;;;;;iBAGH;;;;;iBAGH;;;;;iBAGJ;;;;;iBAGI;;;;;;;;iBAIH","file":"input/input.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\nimport { bindingMode } from 'aurelia-binding';\nimport { inject } from 'aurelia-dependency-injection';\nimport { TaskQueue } from 'aurelia-task-queue';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\nimport { MdInputUpdateService } from './input-update-service';\n\n@customElement('md-input')\n@inject(Element, TaskQueue, MdInputUpdateService)\nexport class MdInput {\n  static id = 0;\n\n  @bindable() mdLabel = '';\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) mdPlaceholder = '';\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) mdTextArea = false;\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) mdType = 'text';\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) mdValidate = false;\n  @bindable() mdValidateError;\n  @bindable({\n    defaultBindingMode: bindingMode.twoWay\n  }) mdValue = '';\n\n  constructor(element, taskQueue, updateService) {\n    this.element = element;\n    this.taskQueue = taskQueue;\n    this.controlId = `md-input-${MdInput.id++}`;\n    this.updateService = updateService;\n  }\n\n  attached() {\n    this.mdTextArea = getBooleanFromAttributeValue(this.mdTextArea);\n    if (getBooleanFromAttributeValue(this.mdValidate)) {\n      this.input.classList.add('validate');\n    }\n    if (this.mdValidateError)  {\n      this.label.setAttribute('data-error', this.mdValidateError);\n    }\n    if (this.mdPlaceholder) {\n      this.input.setAttribute('placeholder', this.mdPlaceholder);\n      this.update();\n    }\n  }\n\n  mdValueChanged() {\n    this.updateService.update();\n    if (this.mdTextArea) {\n      $(this.input).trigger('autoresize');\n    }\n  }\n}\n"]}