{"version":3,"sources":["common/cssClassSetter.js"],"names":[],"mappings":";;;MAOa,cAAc;;;;;;;AAAd,oBAAc;AAGd,iBAHA,cAAc,CAGb,OAAO,EAAE;gCAHV,cAAc;;eACzB,YAAY,GAAG,EAAE;;AAGf,cAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SACxB;;AALU,sBAAc,WAOzB,UAAU,GAAA,oBAAC,OAAO,EAAE;;;AAClB,cAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AAC/B,mBAAO,GAAG,CAAC,OAAO,CAAC,CAAC;WACrB;AACD,iBAAO,CAAC,OAAO,CAAC,UAAA,CAAC,EAAI;AACnB,gBAAI,CAAC,MAAK,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;AACvC,oBAAK,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC1B,oBAAK,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aAC/B;WACF,CAAC,CAAC;SACJ;;AAjBU,sBAAc,WAmBzB,aAAa,GAAA,uBAAC,OAAO,EAAE;;;AACrB,cAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AAC/B,mBAAO,GAAG,CAAC,OAAO,CAAC,CAAC;WACrB;AACD,iBAAO,CAAC,OAAO,CAAC,UAAA,CAAC,EAAI;AACnB,gBAAI,OAAK,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,OAAK,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;AAC3E,qBAAK,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACjC,qBAAK,YAAY,CAAC,MAAM,CAAC,OAAK,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC3D;WACF,CAAC,CAAC;SACJ;;eA7BU,cAAc","file":"common/cssClassSetter.js","sourceRoot":"/source/","sourcesContent":["/**\n * Adds css classes to a given element only if these classes are not already\n * present. Keeps a record of css classes which actually have been added.\n * This way, they can also be removed in a way which keeps the original classes\n * set by the user.\n * Most useful in attached() and detached() handlers.\n */\nexport class CssClassSetter {\n  addedClasses = [];\n\n  constructor(element) {\n    this.element = element;\n  }\n\n  addClasses(classes) {\n    if (typeof classes === 'string') {\n      classes = [classes];\n    }\n    classes.forEach(c => {\n      if (!this.element.classList.contains(c)) {\n        this.addedClasses.push(c);\n        this.element.classList.add(c);\n      }\n    });\n  }\n\n  removeClasses(classes) {\n    if (typeof classes === 'string') {\n      classes = [classes];\n    }\n    classes.forEach(c => {\n      if (this.element.classList.contains(c) && this.addedClasses.indexOf(c) > -1) {\n        this.element.classList.remove(c);\n        this.addedClasses.splice(this.addedClasses.indexOf(c), 1);\n      }\n    });\n  }\n}\n"]}