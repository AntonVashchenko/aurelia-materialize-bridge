{"version":3,"sources":["common/attributeManager.js"],"names":[],"mappings":";;;MAOa,gBAAgB;;;;;;;AAAhB,sBAAgB;AAIhB,iBAJA,gBAAgB,CAIf,OAAO,EAAE;gCAJV,gBAAgB;;eAC3B,YAAY,GAAG,EAAE;eACjB,eAAe,GAAG,EAAE;;AAGlB,cAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SACxB;;AANU,wBAAgB,WAQ3B,aAAa,GAAA,uBAAC,KAAK,EAAE;;;AACnB,cAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,cAAI,CAAC,OAAO,CAAC,UAAA,CAAC,EAAI;AAChB,gBAAI,CAAC,MAAK,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;AACjC,oBAAK,eAAe,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACnC,oBAAK,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aACxC,MAAM,IAAI,MAAK,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE;AACpD,oBAAK,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aACxC;WACF,CAAC,CAAC;SACJ;;AAlBU,wBAAgB,WAoB3B,gBAAgB,GAAA,0BAAC,KAAK,EAAE;;;AACtB,cAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AAC7B,iBAAK,GAAG,CAAC,KAAK,CAAC,CAAC;WACjB;AACD,eAAK,CAAC,OAAO,CAAC,UAAA,CAAC,EAAI;AACjB,gBAAI,OAAK,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAK,eAAe,CAAC,CAAC,CAAC,EAAE;AAC7D,qBAAK,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;AAChC,qBAAK,eAAe,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AAC/B,qBAAO,OAAK,eAAe,CAAC,CAAC,CAAC,CAAC;aAChC;WACF,CAAC,CAAC;SACJ;;AA/BU,wBAAgB,WAiC3B,UAAU,GAAA,oBAAC,OAAO,EAAE;;;AAClB,cAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AAC/B,mBAAO,GAAG,CAAC,OAAO,CAAC,CAAC;WACrB;AACD,iBAAO,CAAC,OAAO,CAAC,UAAA,CAAC,EAAI;AACnB,gBAAI,CAAC,OAAK,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;AACvC,qBAAK,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC1B,qBAAK,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aAC/B;WACF,CAAC,CAAC;SACJ;;AA3CU,wBAAgB,WA6C3B,aAAa,GAAA,uBAAC,OAAO,EAAE;;;AACrB,cAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AAC/B,mBAAO,GAAG,CAAC,OAAO,CAAC,CAAC;WACrB;AACD,iBAAO,CAAC,OAAO,CAAC,UAAA,CAAC,EAAI;AACnB,gBAAI,OAAK,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,OAAK,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;AAC3E,qBAAK,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACjC,qBAAK,YAAY,CAAC,MAAM,CAAC,OAAK,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC3D;WACF,CAAC,CAAC;SACJ;;eAvDU,gBAAgB","file":"common/attributeManager.js","sourceRoot":"/source/","sourcesContent":["/**\r\n * Adds css classes to a given element only if these classes are not already\r\n * present. Keeps a record of css classes which actually have been added.\r\n * This way, they can also be removed in a way which keeps the original classes\r\n * set by the user.\r\n * Most useful in attached() and detached() handlers.\r\n */\r\nexport class AttributeManager {\r\n  addedClasses = [];\r\n  addedAttributes = {};\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  addAttributes(attrs) {\r\n    let keys = Object.keys(attrs);\r\n    keys.forEach(k => {\r\n      if (!this.element.getAttribute(k)) {\r\n        this.addedAttributes[k] = attrs[k];\r\n        this.element.setAttribute(k, attrs[k]);\r\n      } else if (this.element.getAttribute(k) !== attrs[k]) {\r\n        this.element.setAttribute(k, attrs[k]);\r\n      }\r\n    });\r\n  }\r\n\r\n  removeAttributes(attrs) {\r\n    if (typeof attrs === 'string') {\r\n      attrs = [attrs];\r\n    }\r\n    attrs.forEach(a => {\r\n      if (this.element.getAttribute(a) && !!this.addedAttributes[a]) {\r\n        this.element.removeAttribute(a);\r\n        this.addedAttributes[a] = null;\r\n        delete this.addedAttributes[a];\r\n      }\r\n    });\r\n  }\r\n\r\n  addClasses(classes) {\r\n    if (typeof classes === 'string') {\r\n      classes = [classes];\r\n    }\r\n    classes.forEach(c => {\r\n      if (!this.element.classList.contains(c)) {\r\n        this.addedClasses.push(c);\r\n        this.element.classList.add(c);\r\n      }\r\n    });\r\n  }\r\n\r\n  removeClasses(classes) {\r\n    if (typeof classes === 'string') {\r\n      classes = [classes];\r\n    }\r\n    classes.forEach(c => {\r\n      if (this.element.classList.contains(c) && this.addedClasses.indexOf(c) > -1) {\r\n        this.element.classList.remove(c);\r\n        this.addedClasses.splice(this.addedClasses.indexOf(c), 1);\r\n      }\r\n    });\r\n  }\r\n}\r\n"]}