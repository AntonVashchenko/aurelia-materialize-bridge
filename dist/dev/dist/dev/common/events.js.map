{"version":3,"sources":["common/events.js"],"names":[],"mappings":";;;;;;AAAQ,e,cAAA,S;;;AAQD,eAAS,SAAT,CAAmB,OAAnB,EAAqC,IAArC,EAA+D;AAAA,YAAZ,IAAY,yDAAJ,EAAI;;AACpE,YAAI,QAAQ,IAAI,WAAJ,CAAgB,IAAhB,EAAsB;AAChC,kBAAQ,IADwB;AAEhC,mBAAS;AAFuB,SAAtB,CAAZ;AAIA,gBAAQ,aAAR,CAAsB,KAAtB;;AAEA,eAAO,KAAP;AACD;;;;AAQM,eAAS,oBAAT,CAA8B,OAA9B,EAAgD,IAAhD,EAA0E;AAAA,YAAZ,IAAY,yDAAJ,EAAI;;AAC/E,eAAO,UAAU,OAAV,OAAsB,UAAU,WAAhC,GAA8C,IAA9C,EAAsD,IAAtD,CAAP;AACD","file":"common/events.js","sourceRoot":"/source/","sourcesContent":["import {constants} from './constants';\r\n\r\n/**\r\n* Fire DOM event on an element\r\n* @param element The Element which the DOM event will be fired on\r\n* @param name The Event's name\r\n* @param data Addition data to attach to an event\r\n*/\r\nexport function fireEvent(element: Element, name: string, data? = {}) {\r\n  let event = new CustomEvent(name, {\r\n    detail: data,\r\n    bubbles: true\r\n  });\r\n  element.dispatchEvent(event);\r\n\r\n  return event;\r\n}\r\n\r\n/**\r\n* Fire DOM event on an element with the md-on prefix\r\n* @param element The Element which the DOM event will be fired on\r\n* @param name The Event's name, without md-on prefix\r\n* @param data Addition data to attach to an event\r\n*/\r\nexport function fireMaterializeEvent(element: Element, name: string, data? = {}) {\r\n  return fireEvent(element, `${constants.eventPrefix}${name}`, data);\r\n}\r\n"]}