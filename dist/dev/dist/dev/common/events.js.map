{"version":3,"sources":["common/events.js"],"names":[],"mappings":";;;;;;;;;AAQO,WAAS,SAAS,CAAC,OAAgB,EAAE,IAAY,EAAc;QAAZ,IAAK,yDAAG,EAAE;;AAClE,QAAI,KAAK,GAAG,IAAI,WAAW,CAAC,IAAI,EAAE;AAChC,YAAM,EAAE,IAAI;AACZ,aAAO,EAAE,IAAI;KACd,CAAC,CAAC;AACH,WAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;;AAE7B,WAAO,KAAK,CAAC;GACd;;AAQM,WAAS,oBAAoB,CAAC,OAAgB,EAAE,IAAY,EAAc;QAAZ,IAAK,yDAAG,EAAE;;AAC7E,WAAO,SAAS,CAAC,OAAO,OAAK,SAAS,CAAC,WAAW,GAAG,IAAI,EAAI,IAAI,CAAC,CAAC;GACpE;;;;6BA1BO,SAAS","file":"common/events.js","sourceRoot":"/source/","sourcesContent":["import {constants} from './constants';\n\n/**\n* Fire DOM event on an element\n* @param element The Element which the DOM event will be fired on\n* @param name The Event's name\n* @param data Addition data to attach to an event\n*/\nexport function fireEvent(element: Element, name: string, data? = {}) {\n  let event = new CustomEvent(name, {\n    detail: data,\n    bubbles: true\n  });\n  element.dispatchEvent(event);\n\n  return event;\n}\n\n/**\n* Fire DOM event on an element with the md-on prefix\n* @param element The Element which the DOM event will be fired on\n* @param name The Event's name, without md-on prefix\n* @param data Addition data to attach to an event\n*/\nexport function fireMaterializeEvent(element: Element, name: string, data? = {}) {\n  return fireEvent(element, `${constants.eventPrefix}${name}`, data);\n}\n"]}