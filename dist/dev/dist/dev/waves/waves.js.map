{"version":3,"sources":["waves/waves.js"],"names":["bindable","customAttribute","bindingMode","inject","AttributeManager","getBooleanFromAttributeValue","ConfigBuilder","MdWaves","Element","defaultBindingMode","oneTime","element","configBuilder","attributeManager","attached","classes","block","push","circle","color","addClasses","noWavesAttach","Waves","attach","detached","removeClasses"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,qB,sBAAAA,e;;AACVC,iB,mBAAAA,W;;AACAC,Y,+BAAAA,M;;AACAC,sB,2BAAAA,gB;;AACAC,kC,qBAAAA,4B;;AACAC,mB,kBAAAA,a;;;yBAIIC,O,WAFZN,gBAAgB,UAAhB,C,UACAE,OAAOK,OAAP,EAAgBF,aAAhB,C,UAEEN,SAAS;AACRS,4BAAoBP,YAAYQ;AADxB,OAAT,C,UAGAV,SAAS;AACRS,4BAAoBP,YAAYQ;AADxB,OAAT,C,UAGAV,SAAS;AACRS,4BAAoBP,YAAYQ;AADxB,OAAT,C;AAID,yBAAYC,OAAZ,EAAqBC,aAArB,EAAoC;AAAA;;AAAA;;AAAA;;AAAA;;AAClC,eAAKD,OAAL,GAAeA,OAAf;AACA,eAAKC,aAAL,GAAqBA,aAArB;AACA,eAAKC,gBAAL,GAAwB,IAAIT,gBAAJ,CAAqB,KAAKO,OAA1B,CAAxB;AACD;;0BAEDG,Q,uBAAW;AACT,cAAIC,UAAU,CAAC,cAAD,CAAd;AACA,cAAIV,6BAA6B,KAAKW,KAAlC,CAAJ,EAA8C;AAC5CD,oBAAQE,IAAR,CAAa,aAAb;AACD;AACD,cAAIZ,6BAA6B,KAAKa,MAAlC,CAAJ,EAA+C;AAC7CH,oBAAQE,IAAR,CAAa,cAAb;AACD;AACD,cAAI,KAAKE,KAAT,EAAgB;AACdJ,oBAAQE,IAAR,YAAsB,KAAKE,KAA3B;AACD;;AAED,eAAKN,gBAAL,CAAsBO,UAAtB,CAAiCL,OAAjC;AACA,cAAI,CAAC,KAAKH,aAAL,CAAmBS,aAAxB,EAAuC;AACrCC,kBAAMC,MAAN,CAAa,KAAKZ,OAAlB;AACD;AACF,S;;0BAEDa,Q,uBAAW;AACT,cAAIT,UAAU,CAAC,cAAD,EAAiB,aAAjB,CAAd;AACA,cAAI,KAAKI,KAAT,EAAgB;AACdJ,oBAAQE,IAAR,YAAsB,KAAKE,KAA3B;AACD;;AAED,eAAKN,gBAAL,CAAsBY,aAAtB,CAAoCV,OAApC;AACD,S;;;;;;iBAvCU,K;;;;;iBAGC,K","file":"../../../waves/waves.js","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\nimport { bindingMode } from 'aurelia-binding';\nimport { inject } from 'aurelia-dependency-injection';\nimport { AttributeManager } from '../common/attributeManager';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\nimport { ConfigBuilder } from '../config-builder';\n\n@customAttribute('md-waves')\n@inject(Element, ConfigBuilder)\nexport class MdWaves {\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) block = false;\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) circle = false;\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) color;\n\n  constructor(element, configBuilder) {\n    this.element = element;\n    this.configBuilder = configBuilder;\n    this.attributeManager = new AttributeManager(this.element);\n  }\n\n  attached() {\n    let classes = ['waves-effect'];\n    if (getBooleanFromAttributeValue(this.block)) {\n      classes.push('waves-block');\n    }\n    if (getBooleanFromAttributeValue(this.circle)) {\n      classes.push('waves-circle');\n    }\n    if (this.color) {\n      classes.push(`waves-${this.color}`);\n    }\n\n    this.attributeManager.addClasses(classes);\n    if (!this.configBuilder.noWavesAttach) {\n      Waves.attach(this.element);\n    }\n  }\n\n  detached() {\n    let classes = ['waves-effect', 'waves-block'];\n    if (this.color) {\n      classes.push(`waves-${this.color}`);\n    }\n\n    this.attributeManager.removeClasses(classes);\n  }\n}\n"]}